%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.16 (Build 20C69) Quartz PS Context)
%%Title: rhs-protection.eps
%%Creator: ChemDraw(tm) 19.0.0.26
%%CreationDate: 2021-03-25 06:34:41 +0000
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 445 232
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: © 1985–2019 PerkinElmer Informatics, Inc.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 445 232
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: LRZZRY+Helvetica
%!FontType1-1.0: LRZZRY+Helvetica 1.0000.0.0000
14 dict begin
/FontName /LRZZRY+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /B put
dup 34 /r put
dup 35 /N put
dup 36 /H put
dup 37 /two put
dup 38 /O put
dup 39 /C put
dup 40 /M put
dup 41 /e put
dup 42 /plus put
dup 43 /l put
dup 44 /hyphen put
dup 45 /T put
dup 46 /P put
dup 47 /one put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<

002A002A002A002A002A0093007600A000AC00B800AB00C50000002BFE55001A042F002105BE002740292A292827262524232221201F1E1D1C1B1A191817161514131211100D0C0B0A090807060504030201002C4523466020B02660B004262348482D2C452346236120B02661B004262348482D2C45234660B0206120B04660B004262348482D2C4523462361B0206020B02661B02061B004262348482D2C45234660B0406120B06660B004262348482D2C4523462361B0406020B02661B04061B004262348482D2C0110203C003C2D2C20452320B0CD442320B8015A51582320B08D44235920B0ED51582320B04D44235920B09051582320B00D44235921212D2C20204518684420B001602045B04676688A4560442D2C01B9400000000A2D2C00B9000040000B2D2C2045B00043617D6818B0004360442D2C45B01A234445B01923442D2C2045B00325456164B050515845441B2121592D2C20B0032552582359212D2C69B04061B0008B0C6423648BB8400062600C642364615C58B0036159B002602D2C45B0112BB0172344B0177AE5182D2C45B0112BB01723442D2C45B0112BB017458CB0172344B0177AE5182D2CB002254661658A46B040608B482D2CB0022546608A46B040618C482D2C4B53205C58B002855958B00185592D2C20B0032545B019236A4445B01A23444565234520B00325606A20B009234223688A6A606120B0005258B21A401A4523614459B0005058B219401945236144592D2CB9187E3B210B2D2CB92D412D410B2D2CB93B21187E0B2D2CB93B21E7830B2D2CB92D41D2C00B2D2CB9187EC4E00B2D2C4B525845441B2121592D2C0120B003252349B04060B0206320B000525823B002253823B002256538008A63381B212121212159012D2C456920B00943B0022660B00325B005254961B0805358B21940194523616844B21A401A4523606A44B209191A45652345604259B00943608A103A2D2C01B005251023208AF500B0016023EDEC2D2C01B005251023208AF500B0016123EDEC2D2C01B0062510F500EDEC2D2C20B001600110203C003C2D2C20B001610110203C003C2D2C764520B003254523616818236860442D2C7645B00325452361682318456860442D2C7645B0032545616823452361442D2C4569B014B0324B505821B0205961442DB8002B2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8002C2C2020456944B001602DB8002D2CB8002C2A212DB8002E2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8002F2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800302C4B20B0032650585158B080441BB040




00272623211121323635AF0295C4F0D6DEFE32C70380784273FE74018C86A705BDDDC8ACFFFD9304B93A1FFE0372900000010021000004C905BD00070034401A01061E00070204080917171A00FB0203250504FB0619088C5E182B4E10F44DF43CFD3CF44E456544E6003F3F3C4DFD3C3130011521112311213504C9FE11CAFE1105BDAFFAF2050EAF00000000030048FFDA041A0449001C00240025010C40799708991AA71F03050E020F0514150E120F1514400C401408291A014B0BB603C701C603C71BD808D909D61FD823E817E8230BC711C712025C080521240F9A161D243906070716211D1C070A1D160B2507971CA71CB71CD71C0425160F251C05190A0C07110E270F1D27051A27242E072719192627D421A65D182B2B4EF44DFDE44E10F64DEDD4FD391239391112393912392F5D003F3FED3FED12392F3CFD3C10ED1112393130437940460023040503050205010504061F26111012101310141004060C25221B24260020001D26011E1D09170726000B150E26010D0E231A2126011E0521260108180A26000D100A2600002B2B2B2B01103C2B2B103C2B2B2B2A2B2A8101715D00715D5D00161716171615211E013332373637330E01070607062322001110003301262726232206070102B4D638361210FCEF0590978D543014B1074F3152794152C8FEEA0118E2011F0B284AAD7CA805012304476B55516C4AA2A3C55D36473B912E501C100123010601020142FE26754682B38A01DC000000000100890000013D05BD0003002940150000030A0517171A0102290003190405AA216242182B2B4EF43C4DFD3C4E456544E6003F3F31301333112389B4B405BDFA430000000100890000029204470011004F40262703260D37034704040E0810020E0911090C270805070006110A081A13012E10291100191213B80145B321627E182B2B4EF43C4DFDE44E10E6003F3F4D3FC4FDC411123939011112393130005D1333153E0133321617152E0123220615112389AB15A46B05181D101B108892B4042FB9369B0203BE0302AF72FD980000010000000000004FA4C6FA5F0F3CF500110800000000005F4D8F0000000000DB30533BF865FC270B9108F9000000090001000000000000000100000629FE2900000C01F865FCED0B910001000000000000000000000000000000100512004204AC005C02AA0055047300C4047300400556009705C7005A05C700A106AA009705C7009C06390050055600AF04E300210473004801C7008902AA008900000036006A008800AE013A01BE024E02860312036803E6043C046A05340556059C0000000100000010006F0009006B00070002001000100067000007E80B9000040001B8005D2B01BA000501B9005F2B01BF01BB003E00340029001D0012000000652BBF01BC004200340029001D0012000000

622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A620456944750000
00>] def
/CharStrings 16 dict dup begin
/.notdef 0 def
/plus 1 def
/hyphen 2 def
/one 3 def
/two 4 def
/B 5 def
/C 6 def
/H 7 def
/M 8 def
/N 9 def
/O 10 def
/P 11 def
/T 12 def
/e 13 def
/l 14 def
/r 15 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1947 -985 2961 2297} readonly def
/UniqueID 4313082 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28296A7EDB20C4B5346F9ED34289A8A227FC3799356DE002F04102526B6178A77A4115AFF601C3087E9767504A3432F057984E9D86C3F80240F670E3FB38E280EE9C5C984D8C16E546F3B8DCCC340344DEA6AA8C85F49D20ADDF2CBF641F8AF9CCAB0C201C6274642E9D5CD22DD6204692DA9F81CF049A34D47E4B821E9B56F9968148E99FEAC8D405C85BB5B1D8064D8786FAAD39A0D9438FDA5307BA5ABC73143CA32B12EFFB8A7D71C734A83DBD4F6D9FD9DA7F9C345DACF764E1C1FBCDA503C82C49D515C25FD54876432F92FC4F51BE4C6CB340E946BACBA10DFFB942A6B0C14AA8BA4932E1B969E2BBE66433735EDCB696F71801E7426479E58715CA983C4AAE8B4345D7E5A30479C9989F68BBF80448EB6B8417DA577EEE86E189E8C6D6FD8EF93DFCD68F1678E9C503DEE98BD932CE61400B0E6A5440E760F1253CF0F0F15FE2EEDFACC476E84883237720B0B69555602C6878671EAC876C4AB6D65FF33B49ABEECA9C6A518DB7588D81851B9CC08C23DB114C61A0C27968FBD77649538DFC995751B43FE7B4CE8E8F8B90A11F5E4BB8D08AD1A211D18DF010AEFA2178F9EAF981169D7547C1FB46924BE11A364D8081FFFC29D9C0A848E71282F707A748CA169FF55023CA1D0A95EE9A33A27778C50246760C2586A2EEF15DFAA632B958811F6D7212154F02A95189609B027757B08B8D95FE8AE06BB3127DCB77995A1A86261A776D58484E4CE51C331E0790F3941BDB48F43795C15AADAF00E5245B1968116
914C9A4F2CF23FF59ECE19216BBE646547011B0670F67B679E2B9F91DF1961F9079795C5F17BD9DE877582DEB0A14DFBF0BAEC7BDB30E3F8D27E77A999A4C8C65A9B5FB9CDE10221D2EA3F5162F09B441C04A64A641ADE9774F0C47C91F51C49C215A990B1A77D6EE3CE7D23D30D10AE6FB825E63B26E9AB893D0C8EC592D5ABB60977D3F434D732CD4E2604D7D0595B052FB636F8B13BA3622D359FF98703B108B7D167AF0F83EB122855449B71C34AECA9BE46906BD1B52857A992FA0B76879549C4A3DE7407812F14DD25C5265B2F8E693706427EF839CAF4EDCCD5284CF6DFE89FDBDEF3403752967DA39E2DA8834C3AFD7C33B81C05A8FF98FABD5FC6C635BD2F0D87EA64A98247F47E0C503696383BF036E6D24A6F96FA2FB3A86B002E91EFCD331B6BDEBA04FD8F2716297CD6358A7F8420BBFEFDD24F17BE8389A664A1177B124AC018EF046FA2BA696595709294A43ABDC6A5F0D2654A3C388F9ABCA4E3B39D9A8F136520DFD276AC1EB2174DD461420B5E500CEB449C8310E533FC882E4DCB173273FA9105F206E11B83EAB9BB35CBE9E137BCE48D9775D2CE725FD7A3FDA4317C7471BFA3E6AE5A65BDEC0639BD31A0FBD866421862D8E506CA9475C684876605EDAD51C79A8E706493CA936D2AB2307F82CB4E7508FB938AE6E69D368EE6C4BD9F55C4983F02F31D151A175DFC13DDE0D1E2076AF4201B27F64D6602A3867F6085CACF4CD1B3E9920794D551894A69FE9388B798EAFEAF4EAF8621E3483565FA371083F362674FA01479515C2317FAF2F7BA6E523F8CA8E8D4C92E8DDFC71CB65856A661DF33C3F44433F863AB3743D68806C8704CB9DF5B63BD665F0BBA1A393C14D21B9E93D278141F56DF2150BCDF316B335C4C05C1CEE2B76F300A8F49EB21623ED4679D093F14E1B3E058A2F0A7079E7B13A69DABFAD724090B4FC291373F55D4152F6AF1968DCB91CAFD69594E594441E839E289D70629F5085CF35B582F0E6C74C829A5D6485AEE3B4862DF547419DD9931BA69C79635D01AF1ED8DFD3F5C3E6BD7BC1A5BE924592914EE15A81022422B839288393F0A390EE7C2267108BD77EC04D82CF408465A35B6F399BBAD7A6992C15162F95EC019DDCB2AAD5BF43374D4B6A91D060502D38C03304DED1DA91D54886DDBB33DC78C5BB1EFACBEAA043508E3E40FF641D728807106BE993C6D08C92F36F7263B01DBAFEADA71EFBD12A48049F5727108C671A4CC1132575EEB6BE96DB42BC8DA087C53045FE25850A971532DC745443FFB054E738814135C200CB9543EBEB76003AC960ECA6FC430CD7F12F5D5C00DED01AFB3C673F0B45D18F4F5E9415F4877AA15153CC0BB38626F2F8952EBEDB955409EFE4A8E0FC45F0533F1AE899593526BDA82B3BDC00D35B7A6B85018B88E89AC7935CEA689826F82790FF5CAADAD3308
AEDAB37D291899FA335EEC8FAAED401473AE7A9C01068A3BA40B4D0936819CBE1A10B998F028FA5C50017C957AF10EFC8B47245074A942A7F6A3D4806C99375CDCF825480BD63FF48EC5104BC23065C40C55E2D5493A2B7B34ED3D98E339C8B5B88FCDB083F89C6B3703AD09DC206BD0C1FA56A449651CE439FAD49BC086A4F62903FD2C491A6C7F30369EDA5F840E206E1D906F11225150FF49AB7C52A84F8BC7B156435BDFCDC5FC17C9856D577E7C46DC540FC6EB303ED13DDF76F7679AD37682A2E2AC3B0E657220DBFBD900DBA79862D2FE68AA8A6CCC38D800FD08F49811CC03FBEB1FEB27EA5281ADE1E6F5A2BFD79F80B2418D5EF8BF5E6F50A7F04A9C41FD7C54980E3DB5AF2803AEFE6E537B3E36B20E3C1AFB11992390F859E34DA3655F184AB9503BB308EEFF7E412FA6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/LRZZRY+Helvetica cguidfix
/F1.1/LRZZRY+Helvetica renmfont
%RBIBeginFontSubset: VZHLNQ+ArialMT
%!FontType1-1.0: VZHLNQ+ArialMT 1.0000.5.0100
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin
/FontName /VZHLNQ+ArialMT def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /T put
dup 34 /M put
dup 35 /P put
dup 36 /three put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1361 1 index div -665 2 index div 4096 3 index div 2060 5 -1 roll div]cvx def
/sfnts [<








2B2B2B2B2B2B2B2B2B2B2B2B2B737475732B7374757374752B2B2B742B2B0000
00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/three 1 def
/M 2 def
/P 3 def
/T 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1361 -665 4096 2060} readonly def
/UniqueID 4167158 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB286FAF7263B5B68DE54D4A7E5E5AE8FB225BCAC76913AC93E95998C001E3C83661CE71F24BBB833CCD6565EB8CB9B2DF351CF0C7853F4B1ED7BAFF965A6C300615BAD77BDDC852D64F69098B884BE9C1BD2D315A2BAB5BCD2FBDF6D5D0901897A5A0FC18966575D13719C01B35A0E55925B9846A51264D902FBA513EF9776F6002C022C75933D4A37771088161058E1728E62517A27473542FB3F3B5A2D0DD5AF2B1B6704D6D9ADF3985D518250FA805757AB607563A786C3CE6205282D3B0F6F07A018EF18B3FE0D0C59DAD00195BF6BF2E9401986A34ED7818043CAC4EFE9B00F335A54DB8D175656837D2470B0BBB855329DEE1ED4EB8CF71E21503C977C244DFEF5C543E4ABB4AE1F236FB1806149670E543FE13DDFAD6E8620F4C7ED37190BF795E16549E88E444702FB50AB250C090720CC236E185F3C3727011E37EE26610499C0632DB7241B15E6A15CD664A162AE5C9739CF897B05970A1E1B007FC335E851E348DA37D617F3C6EB6A0DFC785F19900BF1D8294FFC55B113BC6C97E71DA5E72766D2D77C8C46497B07DC6DFCACB4C160980098FB01889649C247AA956A3ECBDECCFA7CA5C238FECA3F373AAC6873F1F2D5BA3B41311129E535A22B6611979ACF2D1B4CB27CE24CD49AEEF99A4AF79F4680C19000E8E82A56B88A7BE846660F06E0CB340DE3207E4BBEA18BE7FE3B3F706271B44AB055E907136773469A83D55CCF85A8A360737887BAE38ECC15F785BFBD74A140A5B7E4EAC8BF7B41E2362B10
5160AB68F62E408CB8EE7BAD43659822CCCB3C6CB9B47562E01B6E8401AEB8A3628EC6586279A2E946E170D49D8C73062E8109D607170CDFD3795B359B8EC305623A239F8D86E6DF29CD8913F2F4C7238C222D356F39E263C305BCAF43D2286FEA68D3CCF2734ECE6ED3EB14514CB1D7701D0C7FBD8F90F5454C177E4F68B57ABC0A7D7F4090BAC02B261E318D396268EFF7C1D4169AA7356A6CD54AC06801A3844FBD3F2DB6112DD59CFCB69A583D38B17847593D405110BBB10A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/VZHLNQ+ArialMT cguidfix
/F2.1/VZHLNQ+ArialMT renmfont
%%EndPageSetup
0.60000002 i
0.00014187396 0.00017728657 0 0 setcmykcolor
q
0 0 445 232 rc
-0.050000001 232 m
445.04999 232 l
445.04999 -0.050000001 l
-0.050000001 -0.050000001 l
h
f
0.73725492 0.70588237 0.64313728 0.87058824 setcmykcolor
19.255825 201.06839 m
18.654263 200.72107 l
18.654263 215.11951 l
18.955044 215.29317 l
19.255825 215.11951 l
19.255825 201.06839 l
h
f
21.847544 202.39105 m
21.245981 202.39105 l
21.245981 213.79683 l
21.847544 213.79683 l
21.847544 202.39105 l
h
f
31.424456 194.04282 m
31.424456 193.34819 l
18.654263 200.72107 l
19.255825 201.06839 l
31.424456 194.04282 l
h
f
43.593086 201.06839 m
43.893867 200.89473 l
43.893867 200.54741 l
31.424456 193.34819 l
31.424456 194.04282 l
43.593086 201.06839 l
h
f
41.15176 202.65154 m
41.452541 202.13057 l
31.574846 196.42769 l
31.274065 196.94865 l
41.15176 202.65154 l
h
f
43.593086 215.11951 m
43.893867 215.29317 l
44.194649 215.11951 l
44.194649 201.06839 l
43.893867 200.89473 l
43.593086 201.06839 l
43.593086 215.11951 l
h
f
31.424456 222.14507 m
31.424456 222.83969 l
43.893867 215.64047 l
43.893867 215.29317 l
43.593086 215.11951 l
31.424456 222.14507 l
h
f
31.274065 219.23924 m
31.574846 219.76021 l
41.452541 214.05731 l
41.15176 213.53635 l
31.274065 219.23924 l
h
f
19.255825 215.11951 m
18.955044 215.29317 l
18.955044 215.64047 l
31.424456 222.83969 l
31.424456 222.14507 l
19.255825 215.11951 l
h
f
1 0 0 -1 1.4856303 226.10381 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!")[ 6.669922 0.000000 ] xS
CM
11.693285 219.13843 m
11.994066 219.65939 l
18.955044 215.64047 l
18.955044 215.29317 l
18.654263 215.11951 l
11.693285 219.13843 l
h
f
1 0 0 -1 52.752441 197.30693 cm
0 7.1728516 m
(#$)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
14.443359 9.4726562 m
(%)s
CM
51.399368 196.90874 m
51.098587 196.38777 l
43.893867 200.54741 l
43.893867 200.89473 l
44.194649 201.06839 l
51.399368 196.90874 l
h
f
1 0 0 -1 52.752441 226.20146 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(#&)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
(%)s
CM
51.064167 219.78026 m
51.364948 219.25928 l
44.194649 215.11951 l
43.893867 215.29317 l
43.893867 215.64047 l
51.064167 219.78026 l
h
f
111.69863 206.69287 m
86.712303 206.69287 l
86.712303 207.29288 l
111.69863 207.29288 l
h
f
116.91231 206.99287 m
116.91231 206.99287 110.89668 205.43896 110.89668 205.43896 c
110.89668 205.43896 111.64864 206.31303 111.64864 206.99287 c
111.64864 207.69458 110.89668 208.59677 110.89668 208.59677 c
110.89668 208.59677 116.91231 206.99287 116.91231 206.99287 c
116.91231 206.99287 116.91231 206.99287 116.91231 206.99287 c
h
f
152.38014 204.44849 m
151.77858 204.10117 l
151.77858 218.4996 l
152.07936 218.67326 l
152.38014 218.4996 l
152.38014 204.44849 l
h
f
154.97186 205.77116 m
154.3703 205.77116 l
154.3703 217.17694 l
154.97186 217.17694 l
154.97186 205.77116 l
h
f
164.54878 197.42293 m
164.54878 196.7283 l
151.77858 204.10117 l
152.38014 204.44849 l
164.54878 197.42293 l
h
f
176.71741 204.44849 m
177.01819 204.27483 l
177.01819 203.92752 l
164.54878 196.7283 l
164.54878 197.42293 l
176.71741 204.44849 l
h
f
174.27609 206.03165 m
174.57687 205.51067 l
164.69917 199.80779 l
164.39839 200.32875 l
174.27609 206.03165 l
h
f
176.71741 218.4996 m
177.01819 218.67326 l
177.31897 218.4996 l
177.31897 204.44849 l
177.01819 204.27483 l
176.71741 204.44849 l
176.71741 218.4996 l
h
f
164.54878 225.52518 m
164.54878 226.2198 l
177.01819 219.02058 l
177.01819 218.67326 l
176.71741 218.4996 l
164.54878 225.52518 l
h
f
164.39839 222.61934 m
164.69917 223.1403 l
174.57687 217.43742 l
174.27609 216.91646 l
164.39839 222.61934 l
h
f
152.38014 218.4996 m
152.07936 218.67326 l
152.07936 219.02058 l
164.54878 226.2198 l
164.54878 225.52518 l
152.38014 218.4996 l
h
f
1 0 0 -1 134.60995 229.48392 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!")[ 6.669922 0.000000 ] xS
CM
144.81761 222.51852 m
145.11839 223.03951 l
152.07936 219.02058 l
152.07936 218.67326 l
151.77858 218.4996 l
144.81761 222.51852 l
h
f
1 0 0 -1 185.87675 200.68704 cm
0 7.1728516 m
(#$)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
14.443359 9.4726562 m
(%)s
CM
184.52368 200.28883 m
184.2229 199.76787 l
177.01819 203.92752 l
177.01819 204.27483 l
177.31897 204.44849 l
184.52368 200.28883 l
h
f
1 0 0 -1 185.87675 229.48392 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(#$)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
14.443359 9.4726562 m
(%)s
CM
184.2328 223.18594 m
184.53358 222.66496 l
177.31897 218.4996 l
177.01819 218.67326 l
177.01819 219.02058 l
184.2328 223.18594 l
h
f
244.26631 210.02414 m
219.27998 210.02414 l
219.27998 210.62415 l
244.26631 210.62415 l
h
f
249.47998 210.32414 m
249.47998 210.32414 243.46436 208.77023 243.46436 208.77023 c
243.46436 208.77023 244.21631 209.64432 244.21631 210.32414 c
244.21631 211.02585 243.46436 211.92805 243.46436 211.92805 c
243.46436 211.92805 249.47998 210.32414 249.47998 210.32414 c
249.47998 210.32414 249.47998 210.32414 249.47998 210.32414 c
h
f
284.94781 199.11443 m
284.34625 198.76711 l
284.34625 213.16554 l
284.64703 213.3392 l
284.94781 213.16554 l
284.94781 199.11443 l
h
f
287.53955 200.43709 m
286.93799 200.43709 l
286.93799 211.84286 l
287.53955 211.84286 l
287.53955 200.43709 l
h
f
297.11646 192.08885 m
297.11646 191.39423 l
284.34625 198.76711 l
284.94781 199.11443 l
297.11646 192.08885 l
h
f
309.2851 199.11443 m
309.58588 198.94077 l
309.6203 198.61333 l
297.11646 191.39423 l
297.11646 192.08885 l
309.2851 199.11443 l
h
f
306.84375 200.69757 m
307.14453 200.17661 l
297.26685 194.47372 l
296.96606 194.99469 l
306.84375 200.69757 l
h
f
309.2851 213.16554 m
309.58588 213.3392 l
309.88666 213.12067 l
309.88666 199.15929 l
309.58588 198.94077 l
309.2851 199.11443 l
309.2851 213.16554 l
h
f
297.11646 220.1911 m
297.11646 220.88573 l
309.6203 213.66664 l
309.58588 213.3392 l
309.2851 213.16554 l
297.11646 220.1911 l
h
f
296.96606 217.28528 m
297.26685 217.80624 l
307.14453 212.10336 l
306.84375 211.58238 l
296.96606 217.28528 l
h
f
284.94781 213.16554 m
284.64703 213.3392 l
284.64703 213.68651 l
297.11646 220.88573 l
297.11646 220.1911 l
284.94781 213.16554 l
h
f
1 0 0 -1 267.17764 224.14984 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!")[ 6.669922 0.000000 ] xS
CM
277.34778 217.20612 m
277.64859 217.72708 l
284.64703 213.68651 l
284.64703 213.3392 l
284.34625 213.16554 l
277.34778 217.20612 l
h
f
1 0 0 -1 319.66876 198.10283 cm
0 7.1728516 m
(#)s
1 0 0 -1 319.66876 229.76831 cm
0 7.1728516 m
($)s
0 15.541179 m
(#)s
CM
318.31888 196.41949 m
318.13297 195.84738 l
309.6203 198.61333 l
309.58588 198.94077 l
309.88666 199.15929 l
318.31888 196.41949 l
h
f
331.371 206.13998 m
331.7428 206.13998 l
331.89606 205.8392 l
327.16122 199.32227 l
326.67453 199.67586 l
331.371 206.13998 l
h
f
328.2959 206.31677 m
328.78259 205.96318 l
325.06448 200.84564 l
324.57779 201.19923 l
328.2959 206.31677 l
h
f
326.64847 212.64001 m
327.13513 212.99359 l
331.89606 206.44077 l
331.7428 206.13998 l
331.371 206.13998 l
326.64847 212.64001 l
h
f
309.88666 213.12067 m
309.58588 213.3392 l
309.6203 213.66664 l
318.19031 216.45122 l
318.37619 215.87909 l
309.88666 213.12067 l
h
f
345.96756 206.44077 m
346.14124 206.13998 l
345.96756 205.8392 l
331.89606 205.8392 l
331.7428 206.13998 l
331.89606 206.44077 l
345.96756 206.44077 l
h
f
1 0 0 -1 349.72961 222.22083 cm
0 7.1728516 m
(#)s
CM
353.5141 193.97134 m
353.16678 193.36978 l
345.96756 205.8392 l
346.14124 206.13998 l
346.48853 206.13998 l
353.5141 193.97134 l
h
f
355.09726 196.41267 m
354.57629 196.11189 l
348.87341 205.98959 l
349.39438 206.29037 l
355.09726 196.41267 l
h
f
367.56522 193.97134 m
367.91254 193.36978 l
353.16678 193.36978 l
353.5141 193.97134 l
367.56522 193.97134 l
h
f
374.59079 206.13998 m
375.2854 206.13998 l
367.91254 193.36978 l
367.56522 193.97134 l
374.59079 206.13998 l
h
f
371.68497 206.29037 m
372.20593 205.98959 l
366.50305 196.11189 l
365.98206 196.41267 l
371.68497 206.29037 l
h
f
367.56522 218.30861 m
367.91254 218.91017 l
375.2854 206.13998 l
374.59079 206.13998 l
367.56522 218.30861 l
h
f
357.74289 218.30861 m
357.74289 218.91017 l
367.91254 218.91017 l
367.56522 218.30861 l
357.74289 218.30861 l
h
f
357.74289 215.71689 m
357.74289 216.31845 l
366.24255 216.31845 l
366.24255 215.71689 l
357.74289 215.71689 l
h
f
346.48853 206.13998 m
346.14124 206.13998 l
345.96756 206.44077 l
349.99884 213.42311 l
350.51981 213.12233 l
346.48853 206.13998 l
h
f
1 0 0 -1 57.39138 156.78194 cm
0 7.1728516 m
(#)s
CM
48.833588 131.74652 m
48.232025 131.3992 l
48.232025 145.79764 l
48.532806 145.9713 l
48.833588 145.79764 l
48.833588 131.74652 l
h
f
51.425304 133.0692 m
50.823742 133.0692 l
50.823742 144.47498 l
51.425304 144.47498 l
51.425304 133.0692 l
h
f
61.00222 124.72095 m
61.00222 124.02633 l
48.232025 131.3992 l
48.833588 131.74652 l
61.00222 124.72095 l
61.00222 124.72095 l
h
f
73.170853 131.74652 m
73.772415 131.3992 l
61.00222 124.02633 l
61.00222 124.72095 l
73.170853 131.74652 l
73.170853 131.74652 l
h
f
70.729523 133.32968 m
71.030304 132.8087 l
61.152611 127.10582 l
60.85183 127.62679 l
70.729523 133.32968 l
70.729523 133.32968 l
h
f
73.170853 145.79764 m
73.772415 146.14496 l
73.772415 131.3992 l
73.170853 131.74652 l
73.170853 145.79764 l
h
f
65.882553 150.00554 m
66.183334 150.5265 l
73.772415 146.14496 l
73.170853 145.79764 l
65.882553 150.00554 l
h
f
64.586693 147.76105 m
64.887474 148.28201 l
71.030304 144.73546 l
70.729523 144.21449 l
64.586693 147.76105 l
h
f
48.833588 145.79764 m
48.532806 145.9713 l
48.532806 146.31862 l
55.709919 150.46233 l
56.0107 149.94135 l
48.833588 145.79764 l
h
f
1 0 0 -1 25.230873 156.87959 cm
0 7.3681641 m
(#')[ 7.221680 0.000000 ] xS
CM
40.452171 150.28934 m
40.752953 150.81032 l
48.532806 146.31862 l
48.532806 145.9713 l
48.232025 145.79764 l
40.452171 150.28934 l
h
f
113.85874 140.14047 m
88.872414 140.14047 l
88.872414 140.74046 l
113.85874 140.74046 l
h
f
119.07241 140.44046 m
119.07241 140.44046 113.05679 138.88657 113.05679 138.88657 c
113.05679 138.88657 113.80874 139.76064 113.80874 140.44046 c
113.80874 141.14218 113.05679 142.04437 113.05679 142.04437 c
113.05679 142.04437 119.07241 140.44046 119.07241 140.44046 c
119.07241 140.44046 119.07241 140.44046 119.07241 140.44046 c
h
f
1 0 0 -1 185.01328 147.46077 cm
0 7.1728516 m
(#)s
CM
176.45549 122.42534 m
175.85393 122.07803 l
175.85393 136.47647 l
176.15471 136.65012 l
176.45549 136.47647 l
176.45549 122.42534 l
h
f
179.0472 123.74802 m
178.44563 123.74802 l
178.44563 135.15379 l
179.0472 135.15379 l
179.0472 123.74802 l
h
f
188.62411 115.39978 m
188.62411 114.70515 l
175.85393 122.07803 l
176.45549 122.42534 l
188.62411 115.39978 l
188.62411 115.39978 l
h
f
200.79274 122.42534 m
201.3943 122.07803 l
188.62411 114.70515 l
188.62411 115.39978 l
200.79274 122.42534 l
200.79274 122.42534 l
h
f
198.35141 124.0085 m
198.65219 123.48753 l
188.77451 117.78464 l
188.47372 118.30561 l
198.35141 124.0085 l
198.35141 124.0085 l
h
f
200.79274 136.47647 m
201.3943 136.82378 l
201.3943 122.07803 l
200.79274 122.42534 l
200.79274 136.47647 l
h
f
193.50444 140.68437 m
193.80522 141.20534 l
201.3943 136.82378 l
200.79274 136.47647 l
193.50444 140.68437 l
h
f
192.20859 138.43987 m
192.50937 138.96085 l
198.65219 135.41428 l
198.35141 134.89331 l
192.20859 138.43987 l
h
f
176.45549 136.47647 m
176.15471 136.65012 l
176.15471 136.99744 l
183.3318 141.14114 l
183.63258 140.62018 l
176.45549 136.47647 l
h
f
163.68529 143.50203 m
163.68529 144.19666 l
176.15471 136.99744 l
176.15471 136.65012 l
175.85393 136.47647 l
163.68529 143.50203 l
h
f
1 0 0 -1 133.4351 140.35921 cm
0 7.3681641 m
(\(\)&)[ 8.330078 5.561523 0.000000 ] xS
CM
155.94385 139.0325 m
155.64307 139.55348 l
163.68529 144.19666 l
163.68529 143.50203 l
155.94385 139.0325 l
h
f
1 0 0 -1 160.07443 161.97945 cm
0 7.4133301 m
(#$)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
14.443359 9.7131348 m
(%)s
18.614502 3.8269043 m
(*)s
CM
162.08864 152.99883 m
162.6902 152.99883 l
162.6902 143.10118 l
162.08864 143.10118 l
162.08864 152.99883 l
h
f
164.68036 152.99883 m
165.28192 152.99883 l
165.28192 143.10118 l
164.68036 143.10118 l
164.68036 152.99883 l
h
f
1 0 0 -1 134.37904 162.94638 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
('+)[ 7.221680 0.000000 ] xS
0.74512893 0.71195978 0.6486519 0.80928433 setcmykcolor
/F1.1[ 7.5 0 0 -7.5 0 0]sf
9.4433594 4.1137695 m
(,)s
0.73725492 0.70588237 0.64313728 0.87058824 setcmykcolor
1 0 0 -1 163.17285 183.84595 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(*)s
1 0 0 -1 308.05792 167.60323 cm
0 7.7001953 m
(-\(./)[ 6.108398 8.330078 6.669922 0.000000 ] xS
CM
321.40182 97.521973 m
321.40182 144.28502 l
322.0018 144.28502 l
322.0018 97.521973 l
h
f
321.70181 92.308304 m
321.70181 92.308304 320.0979 98.323929 320.0979 98.323929 c
320.0979 98.323929 321.00009 97.571976 321.70181 97.571976 c
322.38165 97.571976 323.25571 98.323929 323.25571 98.323929 c
323.25571 98.323929 321.70181 92.308304 321.70181 92.308304 c
321.70181 92.308304 321.70181 92.308304 321.70181 92.308304 c
h
f
213.08839 42.677895 m
212.48683 42.330582 l
212.48683 56.729019 l
212.78761 56.902676 l
213.08839 56.729019 l
213.08839 42.677895 l
h
f
215.68011 44.000568 m
215.07855 44.000568 l
215.07855 55.406345 l
215.68011 55.406345 l
215.68011 44.000568 l
h
f
225.25703 35.652332 m
225.25703 34.957706 l
212.48683 42.330582 l
213.08839 42.677895 l
225.25703 35.652332 l
h
f
237.42566 42.677895 m
237.72644 42.504238 l
237.76086 42.176796 l
225.25703 34.957706 l
225.25703 35.652332 l
237.42566 42.677895 l
h
f
234.98434 44.261051 m
235.28513 43.740082 l
225.40742 38.037193 l
225.10664 38.558159 l
234.98434 44.261051 l
h
f
237.42566 56.729019 m
237.72644 56.902676 l
238.02722 56.684143 l
238.02722 42.722767 l
237.72644 42.504238 l
237.42566 42.677895 l
237.42566 56.729019 l
h
f
225.25703 63.754581 m
225.25703 64.449203 l
237.76086 57.230118 l
237.72644 56.902676 l
237.42566 56.729019 l
225.25703 63.754581 l
h
f
225.10664 60.848751 m
225.40742 61.36972 l
235.28513 55.666832 l
234.98434 55.145863 l
225.10664 60.848751 l
h
f
213.08839 56.729019 m
212.78761 56.902676 l
212.78761 57.249989 l
225.25703 64.449203 l
225.25703 63.754581 l
213.08839 56.729019 l
h
f
1 0 0 -1 195.31821 67.713318 cm
0 7.1728516 m
(!")[ 6.669922 0.000000 ] xS
CM
205.48837 60.769588 m
205.78915 61.290558 l
212.78761 57.249989 l
212.78761 56.902676 l
212.48683 56.729019 l
205.48837 60.769588 l
h
f
1 0 0 -1 247.80933 41.666306 cm
0 7.1728516 m
(#)s
1 0 0 -1 247.80933 64.96347 cm
0 7.1728516 m
(#)s
CM
246.45944 39.982979 m
246.27354 39.410858 l
237.76086 42.176796 l
237.72644 42.504238 l
238.02722 42.722767 l
246.45944 39.982979 l
h
f
259.5116 49.703457 m
259.88336 49.703457 l
260.03662 49.402676 l
255.30179 42.885742 l
254.81511 43.239334 l
259.5116 49.703457 l
h
f
256.43649 49.880253 m
256.92316 49.526661 l
253.20505 44.409119 l
252.71837 44.762711 l
256.43649 49.880253 l
h
f
254.78047 56.215275 m
255.26715 56.568863 l
260.03662 50.004238 l
259.88336 49.703457 l
259.5116 49.703457 l
254.78047 56.215275 l
h
f
238.02722 56.684143 m
237.72644 56.902676 l
237.76086 57.230118 l
246.28027 59.998245 l
246.46616 59.426125 l
238.02722 56.684143 l
h
f
274.10815 50.004238 m
274.2818 49.703457 l
274.10815 49.402676 l
260.03662 49.402676 l
259.88336 49.703457 l
260.03662 50.004238 l
274.10815 50.004238 l
h
f
1 0 0 -1 277.87018 65.784302 cm
0 7.1728516 m
(#)s
CM
281.65469 37.534832 m
281.30737 36.93327 l
274.10815 49.402676 l
274.2818 49.703457 l
274.62912 49.703457 l
281.65469 37.534832 l
h
f
283.23782 39.976158 m
282.71686 39.675377 l
277.01398 49.553066 l
277.53494 49.853848 l
283.23782 39.976158 l
h
f
295.70581 37.534832 m
296.05313 36.93327 l
281.30737 36.93327 l
281.65469 37.534832 l
295.70581 37.534832 l
h
f
302.73135 49.703457 m
303.42599 49.703457 l
296.05313 36.93327 l
295.70581 37.534832 l
302.73135 49.703457 l
h
f
299.82553 49.853848 m
300.3465 49.553066 l
294.64362 39.675377 l
294.12265 39.976158 l
299.82553 49.853848 l
h
f
295.70581 61.872097 m
296.05313 62.47366 l
303.42599 49.703457 l
302.73135 49.703457 l
295.70581 61.872097 l
h
f
285.88345 61.872097 m
285.88345 62.47366 l
296.05313 62.47366 l
295.70581 61.872097 l
285.88345 61.872097 l
h
f
285.88345 59.280376 m
285.88345 59.881939 l
294.38312 59.881939 l
294.38312 59.280376 l
285.88345 59.280376 l
h
f
274.62912 49.703457 m
274.2818 49.703457 l
274.10815 50.004238 l
278.1394 56.986588 l
278.66037 56.685806 l
274.62912 49.703457 l
h
f
1 0 0 -1 252.53458 78.657204 cm
0 7.1728516 m
(.\(!)[ 6.669922 8.330078 0.000000 ] xS
CM
253.79962 69.648575 m
254.37173 69.462685 l
253.53732 66.894615 l
252.96519 67.080505 l
253.79962 69.648575 l
h
f
352.1261 54.9967 m
351.52454 54.649387 l
351.52454 69.047821 l
351.82532 69.221481 l
352.1261 69.047821 l
352.1261 54.9967 l
h
f
354.7178 56.319374 m
354.11624 56.319374 l
354.11624 67.725151 l
354.7178 67.725151 l
354.7178 56.319374 l
h
f
364.29474 47.971134 m
364.29474 47.276512 l
351.52454 54.649387 l
352.1261 54.9967 l
364.29474 47.971134 l
h
f
376.46335 54.9967 m
376.76413 54.823044 l
376.79855 54.495602 l
364.29474 47.276512 l
364.29474 47.971134 l
376.46335 54.9967 l
h
f
374.02203 56.579857 m
374.32281 56.058887 l
364.44513 50.355999 l
364.14435 50.876965 l
374.02203 56.579857 l
h
f
376.46335 69.047821 m
376.76413 69.221481 l
377.06491 69.002953 l
377.06491 55.041573 l
376.76413 54.823044 l
376.46335 54.9967 l
376.46335 69.047821 l
h
f
364.29474 76.073387 m
364.29474 76.768013 l
376.79855 69.54892 l
376.76413 69.221481 l
376.46335 69.047821 l
364.29474 76.073387 l
h
f
364.14435 73.167557 m
364.44513 73.688522 l
374.32281 67.985634 l
374.02203 67.464668 l
364.14435 73.167557 l
h
f
352.1261 69.047821 m
351.82532 69.221481 l
351.82532 69.568794 l
364.29474 76.768013 l
364.29474 76.073387 l
352.1261 69.047821 l
h
f
1 0 0 -1 334.3559 80.032127 cm
0 7.1728516 m
(!")[ 6.669922 0.000000 ] xS
CM
344.56357 73.066742 m
344.86435 73.587715 l
351.82532 69.568794 l
351.82532 69.221481 l
351.52454 69.047821 l
344.56357 73.066742 l
h
f
1 0 0 -1 386.84702 53.985111 cm
0 7.1728516 m
(#)s
1 0 0 -1 386.84702 77.28228 cm
0 7.1728516 m
(#)s
CM
385.49713 52.301785 m
385.31125 51.729664 l
376.79855 54.495602 l
376.76413 54.823044 l
377.06491 55.041573 l
385.49713 52.301785 l
h
f
398.54929 62.022263 m
398.92105 62.022263 l
399.07431 61.721481 l
394.33948 55.204548 l
393.85281 55.55814 l
398.54929 62.022263 l
h
f
393.81818 68.534081 m
394.30484 68.887665 l
399.07431 62.323044 l
398.92105 62.022263 l
398.54929 62.022263 l
393.81818 68.534081 l
h
f
391.72141 67.010704 m
392.2081 67.364296 l
395.96085 62.199059 l
395.47418 61.845467 l
391.72141 67.010704 l
h
f
377.06491 69.002953 m
376.76413 69.221481 l
376.79855 69.54892 l
385.31796 72.317047 l
385.50385 71.744934 l
377.06491 69.002953 l
h
f
413.14584 62.323044 m
413.31949 62.022263 l
413.14584 61.721481 l
399.07431 61.721481 l
398.92105 62.022263 l
399.07431 62.323044 l
413.14584 62.323044 l
h
f
1 0 0 -1 416.90787 78.103111 cm
0 7.1728516 m
(#)s
CM
420.69238 49.853638 m
420.34506 49.252075 l
413.14584 61.721481 l
413.31949 62.022263 l
413.66681 62.022263 l
420.69238 49.853638 l
h
f
422.27554 52.294964 m
421.75455 51.994183 l
416.05167 61.871872 l
416.57263 62.172653 l
422.27554 52.294964 l
h
f
434.7435 49.853638 m
435.09082 49.252075 l
420.34506 49.252075 l
420.69238 49.853638 l
434.7435 49.853638 l
h
f
441.76907 62.022263 m
442.46368 62.022263 l
435.09082 49.252075 l
434.7435 49.853638 l
441.76907 62.022263 l
h
f
438.86322 62.172653 m
439.38419 61.871872 l
433.6813 51.994183 l
433.16034 52.294964 l
438.86322 62.172653 l
h
f
434.7435 74.190903 m
435.09082 74.792465 l
442.46368 62.022263 l
441.76907 62.022263 l
434.7435 74.190903 l
h
f
424.92117 74.190903 m
424.92117 74.792465 l
435.09082 74.792465 l
434.7435 74.190903 l
424.92117 74.190903 l
h
f
424.92117 71.599182 m
424.92117 72.200745 l
433.42084 72.200745 l
433.42084 71.599182 l
424.92117 71.599182 l
h
f
413.66681 62.022263 m
413.31949 62.022263 l
413.14584 62.323044 l
417.17709 69.305389 l
417.69806 69.004608 l
413.66681 62.022263 l
h
f
1 0 0 -1 391.57227 40.291382 cm
0 7.1728516 m
(.\(!)[ 6.669922 8.330078 0.000000 ] xS
CM
393.39279 42.314251 m
392.82068 42.128357 l
391.98148 44.711124 l
392.55359 44.897015 l
393.39279 42.314251 l
h
f
1 0 0 -1 318.54608 66.150642 cm
0 7.7001953 m
(*)s
1 0 0 -1 243.62219 10.415064 cm
0 7.7001953 m
(-\(.%)[ 6.108398 8.330078 6.669922 0.000000 ] xS
1 0 0 -1 379.29056 11.767603 cm
/F2.1[ 10 0 0 -10 0 0]sf
0 9.0527344 m
(!"#$)[ 6.108398 8.330078 6.669922 0.000000 ] xS
ep
end
%%Trailer
%%EOF
