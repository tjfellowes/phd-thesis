%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.7 (Build 19H2) Quartz PS Context)
%%Title: pos-esi-ms.eps
%%Creator: ChemDraw(tm) 19.0.0.26
%%CreationDate: 2020-10-22 06:58:58 +0000
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 438 125
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: © 1985–2019 PerkinElmer Informatics, Inc.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 438 125
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: MBVRLI+Helvetica
%!FontType1-1.0: MBVRLI+Helvetica 1.0000.0.0000
14 dict begin
/FontName /MBVRLI+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /N put
dup 34 /S put
dup 35 /e put
dup 36 /O put
dup 37 /plus put
dup 38 /H put
dup 39 /m put
dup 40 /slash put
dup 41 /z put
dup 42 /colon put
dup 43 /space put
dup 44 /three put
dup 45 /nine put
dup 46 /eight put
dup 47 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /C put
dup 52 /I put
dup 53 /D put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<





00092F0728001E211B280119261B2801002B2B2B2B012B2B2B103C2B2B2B2B818181005D015D0402353316171633323635342623220607351E013332373635342623220706072334373621321615140706071E01151400230116E5BC0C2846B78EACB5A11225131C26166541729865B4452605B2406E0115DBF0472C46717FFEF2F8270117C88B3F719878947601019F03022038906B7478427AA070C8C3B98452331D1FB180CDFEFE00000000030042FFD7041A059C000B0017003200CB4047560157095A0F5913640165096B0F691377250949107B197623722573277C317C32881987208727882E883198190D47083208250E0225320B3511112C05351E0517352C0D023821B80186B70E38296F2F08381BB80186B514382F3447331076C418D4EDF4ED10F5EDF4ED003FED3FED12392FED39390111123912393130437940352A2E1C201216030D162D1428000C2B0E28010A12082800061D082800041F022801152E1728000D2A172800071C0528010320052801002B2B2B2B012B2B2B2B2B81818181015D005D00363534262322061514163312363534262322061514163300272635343633321615140706071617161514022322243534363702A48680838274966688A5AA8581A3959CFEB52A4FE8D5CEEA44265059335FFEE8D1FEDF7C7A0340855C5086865A6572FD3B87868B90938270A302A02B5080A0E6D99186532F2D293564A0BDFEF9E3D87FB9310000020049FFD80411059A001B002700AB402E19052B0528164806580568058919881A981A09460807212727350A0A182135100504351BC7180D07023C071E3114B80155400B0D00291B8124380D2947281076C418D4EDF4ED10F5FD397D4B52787A2F18003FEDED3FED12392FED1112393130437940341F26191A0B13010312250226220F24280020111E28010319002800260B242800230E2128011F13212801011A042800250C2728002B2B2B2B012B2B2B2B2B2B81818181015D01161716333236130E012322023534123320131615100702212226350036353426232206151416330110086B374581B6263CB166CFF1EEE8013977424F83FEC7D2DA0232B19F7B849B8895015A95391ED701495F4D0102CBC30128FEE69BE9FEF9CBFEAEDCA601268DB09E9BB1948CA500000200E3000001B40421000300070032401A052A07032A0006070A0917171A05016404001908096421787C182B2B4EF44D3CFD3C4E456544E6003F3F4DED10ED31301333152311331523E3D1D1D1D10421DAFD93DA0000000002005AFFDA057105E5001D001E00B1403B1B0597019605031F011F0482018705891305530803861D111115063A1D030C3A15091E021E1E190331023B1031111A20093119191F20A1216A66182B2B4EF44DED4E10F64DEDF4ED12392F003F3FED3FED12392F10ED31304379
403A001C172513260E251B260B160932000D1410320112110F10071C0932000500033201010204030A180C32000F120C3200081A06320104010632012B2B2B2B01103C103C2B2B103C103C2B2B2B2B2B2B815D015D080117232E0123220011101233323736373306070621202726111037362123041E013411C221C5B2D9FEF5F1EFDC733D1EC21A92AFFED7FF00AEE5ACBA01472805E5FEDABB8EA6FECFFEC5FEFEFEBFA95991E89DBD9BCD01AC0145D0E20000000200A50000056305BD000D00180067401F871196120232080B1E0F02001E17080831131A1A0D250E19191AD6217689182B2B4EF44DFD4E10F64DED003FFD3FFD3130437940260116112515260607050704070307020705060A10083201011608320109120B320107140032002B2B012B2B2A2B2B815D2532373637363736351002232111032120171611140702290102D06541744A3B1A0FD9F1FE9FC80253012FA795589BFE86FDAFAA15276F598B53470111012EFB980513D7C2FED1EABDFEB20000000100A10000052F05BD000B003F402108091E0302020401020A070804072506051A0D010A250B00190C0C0DA0217670182B2B104EF43C4DFD3C4E10F63C4DFD3C003F3C3F3C392F3CFD3C3130133311211133112311211123A1C902FCC9C9FD04C905BDFDA1025FFA4302AFFD510000000100C90000019205BD00030017B8002B2BBA00010000002E2B00B800002FB800022F303113331123C9C9C905BDFA430002009C0000052A05BD0009000A007640143701380602070117012701470158020507010202B8019B4017120606070207080301020806080A030A0A010608020302B8019BB505041A0C0708B8019B400A0900190B0CA0217670182B2B4EF43C4DFD3C4E10F63C4DFD3C11123939392F003F3F3C3F3C12393904872E2B877DC53130005D015D13330111331123011123019CEB02E6BDDFFD0FBE023A05BDFB5A04A6FA4304A5FB5B05BD000000030050FFD505E805E5000F001B001C008A402C8705C700C701C302C808C90A064308153A0F031B3A07091C021C1C0B1231031A1E18310B191D1ED8216A66182B2B4EF44DED4E10F64DED12392F003F3FED3FED313043794032001A0D26012509250526160E18320014001232011A081832001006123201170C1532011302153201190A1B320011041B32002B2B2B2B012B2B2B2B2B2B2B2B81005D0017161110070221202726111037122100123510002322001114122103049BBB92A7C4FE95FEADC2AD94BE0174011BEBFEF1EBE4FEE0F701150E05E5FAC3FED0FEB7DAFF00E0D8014A012AD40110FAA20179F50103013CFEC7FECFF4FEB1055E00020060FFD504F605E5002F003000FE405E290F27232626360E3521472662267A0E7724096B08180E172502590E680EAA22030A0E3A2224220A03041C188614

6700680167067705090105060629120000010A0A01060503050102390403060007063908090A0A07053E071A0C034A00190B0CB221725D182B2B4EF44DE44E10F64DE4003F3F3CFD3C393F3CFD3C390111123939392F872E2B877DC53130015D370121352115012115210134027BFDB4033EFD89028AFC8001CF8E0300A193FD05A104490001006F0000059806600030007EB8005D2BBB001101BD001F00612BBB000C01BC000D00612BBB000501BC000600612BBB000001BD000100612BB8000D10B80023D0B8000C10B80025D0B8000610B8002AD0B8000510B8002CD000B800242FB8002B2FB801B64558B800172F1BB9001701BE3E59B9001501B9F4B80019D0B800192FB8001AD0B8001A2F3031012334022711231126232207112311060215141216332115213533352E023534123637353315363332173533151E01120598C37C9471252F2D2371947C79E69D01D1FBDBDF6B934971D28D71321E1E36718FD37102D3D5011939FDD9023D0907FDC1022539FEE8D49EFF0095A09A0831BDEB77900115CE2AD1BA0404BAD12ACBFEE00000000100000000000067A8FFCC5F0F3CF500110800000000005F4D8F0000000000D8B9A29BF865FC270B9108F9000000090001000000000000000100000629FE2900000C01F865FCED0B91000100000000000000000000000000000017051200420239000004AC005C023900AF0239000004730040047300C404730040047300310473004204730049023900E305C7005A05C700A505C700A1023900C905C7009C06390050055600600473004806AA00840400003405EE006F000000360036006A008A00AE011C014201CE027A032C03C203EE047E04E0051805300586060406D0079A0816086608EE000100000017006F0009006B00070002001000100067000007E80B9000040001B8005D2B01BA000501B9005F2B01BF01BB003E00340029001D0012000000652BBF01BC004200340029001D0012000000652BBF01BD003A00340029001D0012000000652B00BF01B7004D003D003700280012000000652BBF01B80060004F00370028001B000000652BBF01B90047003D0029001D0012000000652BBF01BA004200340029001D0012000000652B00BA01BE000400642BB801B620457D691844B800532BB800492BB8003F2BB800352BB8002B2B4118008001A6009001A600A001A600030069018B0079018B0089018B0099018B00040089018B0099018B00A9018B00B9018BB2040840BA0179001A014A400B041F5414191F180A0B1FD2B80106B49E1FD918E3BB0119000D00E10119B20D0009410A01A0019F0064001F01A50025017A00480028019AB3296C1F60410A01A9007001A9008001A90003008001A9000101A9B21E321FBE012C00250401001F0126001E0401B61FE7312D1FE531B80201B21F

00>] def
/CharStrings 23 dict dup begin
/.notdef 0 def
/space 1 def
/plus 2 def
/period 3 def
/slash 4 def
/zero 5 def
/one 6 def
/two 7 def
/three 8 def
/eight 9 def
/nine 10 def
/colon 11 def
/C 12 def
/D 13 def
/H 14 def
/I 15 def
/N 16 def
/O 17 def
/S 18 def
/e 19 def
/m 20 def
/z 21 def
/uni20BE 22 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1947 -985 2961 2297} readonly def
/UniqueID 4065484 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E14745AF3F10450EAAB791828BD7007DC687000C5DB246371EAE0023B0BA20F1937C9A5ECA5BFE34988A1A98DDC6D836A0A5B81FAC8717B2047737A70845A415F7313C579E9382154EA5989DFC61E817CFCA289B1083B09CF1BD4F7C5ACD4DC7BD8F6DA5A1CC0D16F50697BF896FD75D73891A9416BD36A65E64384C2F3A2156EC104A5D9C56288CF272F4BCEE9B41B0ED03B1613625171057AEE7A30E67A9F497AD78A34370486101958A2404DAC8E6F89F0380A56804153B74E0E2285FDF17666738B9671801847467DB583E3E2EF213CA9F2E012C143CC3859BDB789A1F0E78D41C5CD2A7A659C84AA764F3BD5E093ACD988E77A01192296BD9FE5DC234A81F905AB47A9619D65FDA3D97E8B8BD471FA444497D455C6034E3D256EA03334C2D12EEC6CBBAAE2BB772FE3CCC42A93416CCE952799A275F1E48CF76C98F6450B6CE3C95B92E1F3A4EF09D98C118D1A7A901C3A70B462E823B6FBC389A065552943845F60EC1D901ABE5F93206E50BB0425DF6F437F60D27D442EEE75AC3FA60E8ACDABAD3EDB24E431248D8D0D9CB1F38B3CD8E46F17D441248B5C65B613A0B914218F915E04AA346618DBAE7546487121E6BD01D2C353953A268BAFC51BD767D89D709DE4CCB37848CC6A2854F97E95DC15EDB6D5E356F9EB1FCE4369D0E0FF4EEF245BE375820C19951E6A6F76C6CBEB41AF0D77109AC8088792EBC0EAA993CBAEBEAE049413317FC18F91347716C2AEBB1CC5C7C3CDB0CE6F9CD7ED9208E1E29C9
D4934B571A79B9C2D0AB57B5251D62E5ACF1B2E22AFE72239C3EDB15AD9F1516DD77EB1D47256A2358A87F0C041635BCC534896751EC0424AD7D4FDA6F865CE878297D3CB7270642BE760BE3F9DAE87F0850A4F637D08E8892EDFE94499AC2576B9150FE60AED67852D149EF2B13215C0E0397900B9ED66C5BC45CC6B95FDAABB0F7E344276734ED4A4E12A32D6AF03EC98747F035963C994DCF3587333AE6160B61C2AC415BA315D510B032B8F4BC4674F91B8A0CDF43DC0FECADB0F23EFEEE8C327A7DB091860DFF1267BEE6CA20B1F0A4FA89512D9820C0538234C01612949E0F70B5EEF533C16284E08278A99421302C52543B866B12C9D34E06DB53C4D20AB99C0E6EDC1684B84F082D1D75F34E42C6914EA18584883267ECD1955CFFC52C7AAAF54881C4F1E6ABB0515B7DE508119365B49C7FBB27BD29BFD9FF18B74B8CF848D47DCFE13AE3010F90260E884FF22756BD7A2567CEC2424B082E8D1BE2F45621BD1D15E661FDF933498B30A762332AF929E15D45A7F0136A619F92E86B96F117DCEB43A4196FEEFC63607AB0A7679E042F1B845FE310EF8EBFADB6FCC4FFA3B3EFB7AF3052DD6CD36BB04AB07D9638581D180B57AC57681299F08E61DB037888831E25A7E6FF2755C0C72BB559522DC7D3A12C32774D7C463A6DF8E74201E39C48585DD5708B34DD718C2FA1F665616FE8189726AF4469A0A7153B5EFB2E888FE812E71B64B10C210AAA5B4B7784DABD3CF1E751106B42F169C985424B272858CBFF64233D3E2AA91E1F3B8E51F846D855AC66A502C302BEC8B0F495A24E6664250C59A06846F168F6469731A31DAE9C2C952004BA2D6047C5590FB914E6FC34F1DB08A555DFEFCFCFDA55173451C41A4C5295496FDF968BDBC737F2F415C36E5AF80AC9543DFECE312EDC96BA856804C441A6378826C5E1C2A50B82921A9A1D27EA7EFFBC06B60F84CAD6EF1F186ADC391A8B4878ED27E57DF0E7E973917571A2071F15252059D2CF7E87C1E7A6AB776C392433C0947F0D4DFE6B1C3CA14EA563E9B7FC9028B00C7C3A7FABB3F44C827903A44A9CEE5773D1A2C2BC24166B595D99ACABEBFDA09EF6E31FBB6B7760356BFA5AC078E333BDAF0F3813CE0B7F10073F90EDF9C686D9DB1278E60EFB4A4937AE77A09183A6D9F9E7F967EE79D3CAF165A12EEBA1F2135949B6D2A4745A6F34C0B844F38FA7705D994891564AD6A9830CB49E8CA84ED8905C0430F7383FA0537F509CE825E1455355FF8CB9D791C5EB1FEF36F8FA0F94B92A27A6432C157726B2A75410B75559C5101DAE271E68115BB31870579B7F3615167FCCD816D0015F04F557A7E71B1ECF460951EA46202A3E350C3EBABF2EEE4353970B157E6F9C659208018C15AD8F25FFCF90C6A83F767B765CCB870684F5E00904B736319A1C5EFDC7131E2B039C9A695A204C


0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/MBVRLI+Helvetica cguidfix
/F1.1/MBVRLI+Helvetica renmfont
%RBIBeginFontSubset: TXLMNC+Helvetica-Bold
%!FontType1-1.0: TXLMNC+Helvetica-Bold 1.0000.1.0000
14 dict begin
/FontName /TXLMNC+Helvetica-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /o put
dup 34 /r put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2084 1 index div -985 2 index div 2942 3 index div 2374 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000003A46670676D000000000000044000000D0A676C7966000000000000114C000002B46865616400000000000014000000003668686561000000000000143800000024686D7478000000000000145C000000106C6F6361000000000000146C0000000A6D6178700000000000001478000000207072657000000000000014980000044E05C0001105C2002D0597001D0442001D0000FFDA0000FFDB0000FFDAFE53FFEF05D0000AFFFDFFED03340000012200000122DFFB011400AF000700B7007E000400D200AA0109002300ED013200D9011D012A00D800FE00DB00E2001A008B00A0001A004500E801F6000900E90128013200360082009E009FFF700070003F003F00E801050015003800E9FF7BFFC8FFF90042008A00C401070113011DFFB9002F00870087009A009C010C0262FFB10018004C00770080008200C900DAFFB2FFEA001A003600E50111012F043BFFDD00020005001A0039008900AA00B701210123012A015BFFE5000200180023005C00AAFF4DFF76FFB2FFEF001A002F004E007B008A00E1011F0126012B019A01DE03EDFF80FF8E0007001C004E005500630063006D00810098009C00AD011F01260162041C051500390044004B0063008E00CC00E800F2010001290142017802D503EA03F0043B049AFFC400050055005C0060009F0103011D012401550164017001AD01B401C301F602370261033903D5047004A100020055008800A100BD00C700D300DD00EB00ED00FA00FD0104012B013E014F017B019D01AD01E20233025D027D028C02DA02EF033103DE0407048B058505BBFF04FFD5FFFA0007001E002A003B004700510058006500650066006E0075007F00840107009700B100C300CC00DF00DF010A0110012F013101470154015B016B0179009101A401BA01DC01E401E601E901F60213021F0223022F0276027D0282028902AD02B202B902ED03110374037D03C003DE03F60415045D04C004C004DF052D0574061C064B0751FE94FEDFFF2DFF90FF9AFFEA0016001600240029002D003E0104006D006D008400870089008E009C00A400AB00AE00B200B2FFFB013900C400D100DF00E100EF00F70121011C011C012101320138015001510154016C016D017F019801A401AA01B601BA01BB01BB00D701D701FB01FB01FE00190209022D025B026102790279029A009802D302DA02EF030C03210328032D034B0353FFF103AD03B103F20425045A0471047B048A0498049F051C053D0557055A0570059505B605CB05D605EF05F4061D068706A406B406D307080734079807FE012201320120012500B400BE0082009603700132012400430184011D015600CC010500ED00C500FB00F900C000A7011D00FE035500880026FFA100B8FF8800DD00BD00B5





65422B2B2B4B5279B35279EB56456523456023456560234560B08B766818B080622020B1EB794565234520B003266062636820B003266165B079236544B0EB234420B152564565234520B003266062636820B003266165B056236544B0522344B10056455458B156406544B25240524523614459B35045484E456523456023456560234560B089766818B080622020B148454565234520B003266062636820B003266165B045236544B048234420B1504E4565234520B003266062636820B003266165B04E236544B0502344B1004E455458B14E406544B250405045236144592B2B456953420000
00>] def
/CharStrings 4 dict dup begin
/.notdef 0 def
/o 1 def
/r 2 def
/uni20BE 3 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-2084 -985 2942 2374} readonly def
/UniqueID 4396998 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2878974AB253FC8F6E50D35D384423D89D255799B15B5BC324012A54138F7244B185D0E5D49801438B71EC8276637BB023EABCE1315B40B4AFFCB3140A0B7A5F82840BB85001EC1B689EACA820F8C1725338AC3AD8FB2D5C6B78EAF39E7E87497A871DD79CF8F23E5E04B28DCFE77BCBCC99EF53E8C67FC622AD5E1DBA5720492DB2B7B620E9D76C9F70C9BCE0216718B142BCEE5B3ACB6373EF75C08D95F542690376C39F5924438AC1276688708AE2DA3C164E7990090A590FAEADFE6B1B50964C9144B22722C8418ECF0996F40C9E017035F600535DB5E52DEF4C554DB78EF1FC030276F5FDB1A99B650E82A5229A33ADD9BD8AE0F67DECF9861FE2781934AC8B711E0812F5BCC22D60FEF85FC5057F1A60085CFBA532E5BCBE9E88301EA1ED103259D3B6D6EAA07A73C020A0601FA63C03F030901281E24B8FF880DFCC874DA8C89235E381A76AD610A66DB835E638EC24F4AA7061F05A30BCD3AC84A6F26F26047D6B241177A86356927E9766DF2EC86D0888E585B890736545513E42E54E73EB191A00CFEFE8E0DD4EBC0AEBD389148E04404573DA2161C19C1ABDB9364EB655F8666389870EB127087CB4184E9667460C8BD0CB92B6DEA7B99073AF060EA4E9BD44FD22DED42E1200A04B82D0E901145E0B09374957523129AC2EAC5067AA54228E919D3E905408FEC6F96584EA0F933A02E49A54302E8D4F56C7D367A4A0293EA29E66E4F4E4CFB48960FF57212CEAB20A56C22591C8ACBB0C823DFD0380272B2
1624422E017D9D1229595A413D5BFF438CB20C42264572F3127B0C61895925C972984FA65994CE68D2655D8C06758D46710DE1F928DC36DD812302A2F6787B3BABD012E71DAE0D1D47DE60072C0ABFF55B0D77758D364FAEDF8A3E2FCD9FA111C7923755279D4CBDC34DFEF3CEA48DFA32583811BC5B8BD984E3FE5534CE8E1FB78988332326F2B5F39A422C2ABBD74C71D103C45941B3F8999779DE7EF2BFC5349E44
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/TXLMNC+Helvetica-Bold cguidfix
/F2.1/TXLMNC+Helvetica-Bold renmfont
%%EndPageSetup
0.60000002 i
0.00014187396 0.00017728657 0 0 setcmykcolor
q
0 0 438 125 rc
-0.050000001 125 m
438.04999 125 l
438.04999 -0.050000001 l
-0.050000001 -0.050000001 l
h
f
0.73725492 0.70588237 0.64313728 0.87058824 setcmykcolor
146.59906 86.150108 m
145.9975 85.802803 l
145.9975 100.50011 l
146.59906 100.15281 l
146.59906 86.150108 l
h
f
149.18207 87.467751 m
148.58051 87.467751 l
148.58051 98.835167 l
149.18207 98.835167 l
149.18207 87.467751 l
h
f
158.72575 79.148766 m
158.72575 78.45414 l
145.9975 85.802803 l
146.59906 86.150108 l
158.72575 79.148766 l
h
f
170.85243 86.150108 m
171.15321 85.976456 l
171.18762 85.64901 l
158.72575 78.45414 l
158.72575 79.148766 l
170.85243 86.150108 l
h
f
168.41983 87.728233 m
168.72061 87.207268 l
158.87614 81.52356 l
158.57536 82.044525 l
168.41983 87.728233 l
h
f
170.85243 100.15281 m
171.15321 100.32646 l
171.45399 100.16883 l
171.45399 86.194984 l
171.15321 85.976456 l
170.85243 86.150108 l
170.85243 100.15281 l
h
f
158.72575 107.15415 m
158.72575 107.84878 l
171.13866 100.68217 l
171.15321 100.32646 l
170.85243 100.15281 l
158.72575 107.15415 l
h
f
158.57536 104.25839 m
158.87614 104.77936 l
168.72061 99.09565 l
168.41983 98.574684 l
158.57536 104.25839 l
h
f
146.59906 100.15281 m
145.9975 100.50011 l
158.72575 107.84878 l
158.72575 107.15415 l
146.59906 100.15281 l
h
f
1 0 0 -1 189.62476 96.762886 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 180.05794 112.50616 cm
0 7.3681641 m
("#)[ 6.669922 0.000000 ] xS
CM
184.68599 81.89566 m
184.80087 81.542068 l
184.56216 81.303368 l
171.18762 85.64901 l
171.15321 85.976456 l
171.45399 86.194984 l
184.68599 81.89566 l
h
f
189.35468 88.321564 m
189.84135 87.967972 l
185.13429 81.489258 l
184.80087 81.542068 l
184.68599 81.89566 l
189.35468 88.321564 l
h
f
186.09908 103.93057 m
186.60826 104.2509 l
190.19049 98.556717 l
189.6813 98.236389 l
186.09908 103.93057 l
h
f
171.45399 100.16883 m
171.15321 100.32646 l
171.13866 100.68217 l
178.88576 106.04364 l
179.22809 105.54898 l
171.45399 100.16883 l
h
f
214.93425 81.02478 m
214.58693 80.423218 l
207.41193 92.850677 l
207.58559 93.151459 l
207.93289 93.151459 l
214.93425 81.02478 l
h
f
216.51237 83.45739 m
215.99139 83.156609 l
210.30769 93.001068 l
210.82866 93.301849 l
216.51237 83.45739 l
h
f
228.93694 81.02478 m
229.28426 80.423218 l
214.58693 80.423218 l
214.93425 81.02478 l
228.93694 81.02478 l
h
f
235.93829 93.151459 m
236.6329 93.151459 l
229.28426 80.423218 l
228.93694 81.02478 l
235.93829 93.151459 l
h
f
233.04253 93.301849 m
233.56349 93.001068 l
227.87979 83.156609 l
227.35881 83.45739 l
233.04253 93.301849 l
h
f
228.93694 105.27814 m
229.28426 105.8797 l
236.6329 93.151459 l
235.93829 93.151459 l
228.93694 105.27814 l
h
f
214.93425 105.27814 m
214.58693 105.8797 l
229.28426 105.8797 l
228.93694 105.27814 l
214.93425 105.27814 l
h
f
216.25189 102.69514 m
216.25189 103.2967 l
227.61929 103.2967 l
227.61929 102.69514 l
216.25189 102.69514 l
h
f
207.93289 93.151459 m
207.58559 93.151459 l
207.41193 93.45224 l
214.58693 105.8797 l
214.93425 105.27814 l
207.93289 93.151459 l
h
f
207.41193 93.45224 m
207.58559 93.151459 l
207.41193 92.850677 l
197.68803 92.850677 l
197.68803 93.45224 l
207.41193 93.45224 l
h
f
1 0 0 -1 185.34612 71.603493 cm
0 7.3681641 m
($)s
CM
187.85901 73.103462 m
187.28688 72.917572 l
184.56216 81.303368 l
184.80087 81.542068 l
185.13429 81.489258 l
187.85901 73.103462 l
h
f
190.31558 73.901657 m
189.74347 73.715759 l
187.3781 80.995621 l
187.95021 81.181519 l
190.31558 73.901657 l
h
f
1 0 0 -1 217.11937 53.584549 cm
0 7.4133301 m
(!)s
0.74512893 0.71195978 0.6486519 0.80928433 setcmykcolor
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 3.8269043 m
(%)s
0.73725492 0.70588237 0.64313728 0.87058824 setcmykcolor
CM
245.36826 49.679226 m
245.96982 50.026539 l
245.96982 35.628101 l
245.66904 35.454445 l
245.36826 35.628101 l
245.36826 49.679226 l
h
f
242.77654 48.356552 m
243.3781 48.356552 l
243.3781 36.950775 l
242.77654 36.950775 l
242.77654 48.356552 l
h
f
233.19962 56.704788 m
233.19962 57.399414 l
245.96982 50.026539 l
245.36826 49.679226 l
233.19962 56.704788 l
h
f
228.72871 54.123508 m
228.42793 54.644478 l
233.19962 57.399414 l
233.19962 56.704788 l
228.72871 54.123508 l
h
f
230.02457 51.879017 m
229.72379 52.399986 l
233.04922 54.319927 l
233.35001 53.798962 l
230.02457 51.879017 l
h
f
221.03099 35.628101 m
220.42943 35.280788 l
220.42943 44.553932 l
221.03099 44.553932 l
221.03099 35.628101 l
h
f
233.19962 28.602539 m
233.19962 27.907915 l
220.42943 35.280788 l
221.03099 35.628101 l
233.19962 28.602539 l
h
f
233.35001 31.508369 m
233.04922 30.9874 l
223.17154 36.690289 l
223.47232 37.211258 l
233.35001 31.508369 l
h
f
245.36826 35.628101 m
245.66904 35.454445 l
245.66904 35.107132 l
233.19962 27.907915 l
233.19962 28.602539 l
245.36826 35.628101 l
h
f
1 0 0 -1 254.5276 31.866653 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
CM
253.17453 31.468456 m
252.87375 30.947489 l
245.66904 35.107132 l
245.66904 35.454445 l
245.96982 35.628101 l
253.17453 31.468456 l
h
f
270.45749 35.714931 m
270.75824 35.193962 l
263.38861 30.939095 l
263.08783 31.460064 l
270.45749 35.714931 l
h
f
258.43924 13.85679 m
257.83768 13.85679 l
257.83768 23.09009 l
258.43924 23.09009 l
258.43924 13.85679 l
h
f
1 0 0 -1 204.64996 60.663528 cm
0 7.1728516 m
(&)s
CM
213.19695 53.854904 m
213.49773 54.375874 l
215.82423 53.032658 l
215.52345 52.511688 l
213.19695 53.854904 l
h
f
193.6752 65.017975 m
193.97305 65.540627 l
195.84279 64.475098 l
195.54494 63.95245 l
193.6752 65.017975 l
h
f
197.41467 62.886921 m
197.71252 63.409573 l
199.58224 62.344048 l
199.28441 61.821396 l
197.41467 62.886921 l
h
f
201.15413 60.755867 m
201.45198 61.278519 l
203.32172 60.21299 l
203.02386 59.690342 l
201.15413 60.755867 l
h
f
29.721542 43.913937 m
29.11998 43.566624 l
29.11998 58.263943 l
29.721542 57.91663 l
29.721542 43.913937 l
h
f
32.304543 45.231575 m
31.70298 45.231575 l
31.70298 56.598991 l
32.304543 56.598991 l
32.304543 45.231575 l
h
f
41.848236 36.91259 m
41.848236 36.217964 l
29.11998 43.566624 l
29.721542 43.913937 l
41.848236 36.91259 l
h
f
53.974915 43.913937 m
54.275696 43.74028 l
54.310112 43.412838 l
41.848236 36.217964 l
41.848236 36.91259 l
53.974915 43.913937 l
h
f
51.542305 45.492058 m
51.843086 44.971092 l
41.998627 39.287384 l
41.697845 39.808353 l
51.542305 45.492058 l
h
f
53.974915 57.91663 m
54.275696 58.090286 l
54.576477 57.932659 l
54.576477 43.958809 l
54.275696 43.74028 l
53.974915 43.913937 l
53.974915 57.91663 l
h
f
41.848236 64.917976 m
41.848236 65.612602 l
54.261143 58.445999 l
54.275696 58.090286 l
53.974915 57.91663 l
41.848236 64.917976 l
h
f
41.697845 62.022213 m
41.998627 62.543182 l
51.843086 56.859474 l
51.542305 56.338509 l
41.697845 62.022213 l
h
f
29.721542 57.91663 m
29.11998 58.263943 l
41.848236 65.612602 l
41.848236 64.917976 l
29.721542 57.91663 l
h
f
1 0 0 -1 72.747238 54.526711 cm
0 7.1728516 m
(!)s
1 0 0 -1 60.399658 70.269981 cm
0 7.3681641 m
("#)[ 6.669922 0.000000 ] xS
CM
67.808464 39.659481 m
68.038246 38.952305 l
54.310112 43.412838 l
54.275696 43.74028 l
54.576477 43.958809 l
67.808464 39.659481 l
h
f
72.477165 46.085384 m
72.963837 45.731796 l
68.038246 38.952305 l
67.808464 39.659481 l
72.477165 46.085384 l
h
f
69.991859 60.469955 m
70.501038 60.790283 l
73.312965 56.320541 l
72.803787 56.000214 l
69.991859 60.469955 l
h
f
54.576477 57.932659 m
54.275696 58.090286 l
54.261143 58.445999 l
60.117596 62.499023 l
60.459927 62.004368 l
54.576477 57.932659 l
h
f
98.056725 38.788605 m
97.709419 38.187042 l
90.534416 50.614502 l
90.708069 50.915283 l
91.055382 50.915283 l
98.056725 38.788605 l
h
f
99.63485 41.221214 m
99.113884 40.920433 l
93.430176 50.764893 l
93.951141 51.065674 l
99.63485 41.221214 l
h
f
112.05943 38.788605 m
112.40673 38.187042 l
97.709419 38.187042 l
98.056725 38.788605 l
112.05943 38.788605 l
h
f
119.06077 50.915283 m
119.75539 50.915283 l
112.40673 38.187042 l
112.05943 38.788605 l
119.06077 50.915283 l
h
f
116.16501 51.065674 m
116.68597 50.764893 l
111.00227 40.920433 l
110.4813 41.221214 l
116.16501 51.065674 l
h
f
112.05943 63.041962 m
112.40673 63.643524 l
119.75539 50.915283 l
119.06077 50.915283 l
112.05943 63.041962 l
h
f
98.056725 63.041962 m
97.709419 63.643524 l
112.40673 63.643524 l
112.05943 63.041962 l
98.056725 63.041962 l
h
f
99.374367 60.458961 m
99.374367 61.060524 l
110.74178 61.060524 l
110.74178 60.458961 l
99.374367 60.458961 l
h
f
91.055382 50.915283 m
90.708069 50.915283 l
90.534416 51.216064 l
97.709419 63.643524 l
98.056725 63.041962 l
91.055382 50.915283 l
h
f
90.534416 51.216064 m
90.708069 50.915283 l
90.534416 50.614502 l
80.810516 50.614502 l
80.810516 51.216064 l
90.534416 51.216064 l
h
f
1 0 0 -1 68.468597 29.389898 cm
0 7.4133301 m
($&)[ 7.778320 0.000000 ] xS
0.74512893 0.71195978 0.6486519 0.80928433 setcmykcolor
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 3.8269043 m
(%)s
0.73725492 0.70588237 0.64313728 0.87058824 setcmykcolor
CM
72.220406 31.233679 m
71.648285 31.047787 l
68.575623 40.504444 l
69.147743 40.690338 l
72.220406 31.233679 l
h
f
69.763824 30.435488 m
69.191704 30.249594 l
66.119049 39.706253 l
66.691162 39.892147 l
69.763824 30.435488 l
h
f
1 0 0 -1 49.280365 89.891457 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
CM
28.253159 86.453682 m
27.651596 86.106377 l
27.651596 100.50481 l
27.952377 100.67847 l
28.253159 100.50481 l
28.253159 86.453682 l
h
f
30.844877 87.77636 m
30.243315 87.77636 l
30.243315 99.182137 l
30.844877 99.182137 l
30.844877 87.77636 l
h
f
40.421799 79.428123 m
40.421799 78.733498 l
27.651596 86.106377 l
28.253159 86.453682 l
40.421799 79.428123 l
h
f
47.636406 83.593483 m
47.937187 83.07251 l
40.421799 78.733498 l
40.421799 79.428123 l
47.636406 83.593483 l
h
f
46.340546 85.837975 m
46.641331 85.317009 l
40.572189 81.812981 l
40.271408 82.333954 l
46.340546 85.837975 l
h
f
52.590424 100.50481 m
53.191986 100.85212 l
53.191986 91.518021 l
52.590424 91.518021 l
52.590424 100.50481 l
h
f
40.421799 107.53037 m
40.421799 108.225 l
53.191986 100.85212 l
52.590424 100.50481 l
40.421799 107.53037 l
h
f
40.271408 104.62454 m
40.572189 105.14552 l
50.449879 99.442619 l
50.149097 98.921654 l
40.271408 104.62454 l
h
f
28.253159 100.50481 m
27.952377 100.67847 l
27.952377 101.02578 l
40.421799 108.225 l
40.421799 107.53037 l
28.253159 100.50481 l
h
f
1 0 0 -1 11.872131 111.48911 cm
0 7.1728516 m
(!)s
CM
20.400806 104.69106 m
20.701588 105.21203 l
27.952377 101.02578 l
27.952377 100.67847 l
27.651596 100.50481 l
20.400806 104.69106 l
h
f
3.1639402 100.41798 m
2.8631592 100.93895 l
10.228172 105.19114 l
10.528954 104.67017 l
3.1639402 100.41798 l
h
f
15.18219 122.27612 m
15.783752 122.27612 l
15.783752 113.11568 l
15.18219 113.11568 l
15.18219 122.27612 l
h
f
62.82402 72.432777 m
62.329098 72.090828 l
61.091648 73.881866 l
61.586571 74.223816 l
62.82402 72.432777 l
h
f
60.349125 76.014854 m
59.854202 75.672905 l
58.616753 77.463943 l
59.111675 77.805893 l
60.349125 76.014854 l
h
f
57.874226 79.596924 m
57.379303 79.254982 l
56.141857 81.046013 l
56.63678 81.387962 l
57.874226 79.596924 l
h
f
1 0 0 -1 39.116531 11.246298 cm
0 7.7001953 m
('\(\)*+,-./0.)[ 8.330078 2.778320 5.000000 2.778320 2.778320 5.561523 5.561523 5.561523 2.778320 5.561523 0.000000 ] xS
1 0 0 -1 165.32608 10.50823 cm
0 7.7001953 m
('\(\)*+,-./0.)[ 8.330078 2.778320 5.000000 2.778320 2.778320 5.561523 5.561523 5.561523 2.778320 5.561523 0.000000 ] xS
CM
332.51047 62.590534 m
301.55884 62.590534 l
301.55884 63.190533 l
332.51047 63.190533 l
h
f
337.72415 62.890533 m
337.72415 62.890533 331.70853 61.336628 331.70853 61.336628 c
331.70853 61.336628 332.46048 62.210701 332.46048 62.890533 c
332.46048 63.592243 331.70853 64.494438 331.70853 64.494438 c
331.70853 64.494438 337.72415 62.890533 337.72415 62.890533 c
337.72415 62.890533 337.72415 62.890533 337.72415 62.890533 c
h
f
1 0 0 -1 381.70844 76.464653 cm
0 7.4133301 m
(!)s
0.74512893 0.71195978 0.6486519 0.80928433 setcmykcolor
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 3.8269043 m
(%)s
0.73725492 0.70588237 0.64313728 0.87058824 setcmykcolor
CM
409.95734 72.559334 m
410.5589 72.906639 l
410.5589 58.508205 l
410.25812 58.334549 l
409.95734 58.508205 l
409.95734 72.559334 l
h
f
407.36563 71.236656 m
407.96719 71.236656 l
407.96719 59.830879 l
407.36563 59.830879 l
407.36563 71.236656 l
h
f
397.7887 79.584892 m
397.7887 80.279518 l
410.5589 72.906639 l
409.95734 72.559334 l
397.7887 79.584892 l
h
f
393.31778 77.003616 m
393.017 77.524582 l
397.7887 80.279518 l
397.7887 79.584892 l
393.31778 77.003616 l
h
f
394.61365 74.759117 m
394.31287 75.28009 l
397.63831 77.200035 l
397.93909 76.679062 l
394.61365 74.759117 l
h
f
385.62006 58.508205 m
385.01849 58.160892 l
385.01849 67.484039 l
385.62006 67.484039 l
385.62006 58.508205 l
h
f
397.7887 51.482643 m
397.7887 50.788017 l
385.01849 58.160892 l
385.62006 58.508205 l
397.7887 51.482643 l
h
f
397.93909 54.388474 m
397.63831 53.867504 l
387.76062 59.570393 l
388.0614 60.091362 l
397.93909 54.388474 l
h
f
409.95734 58.508205 m
410.25812 58.334549 l
410.25812 57.987236 l
397.7887 50.788017 l
397.7887 51.482643 l
409.95734 58.508205 l
h
f
1 0 0 -1 419.1167 54.746758 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
CM
417.76361 54.34856 m
417.46283 53.827591 l
410.25812 57.987236 l
410.25812 58.334549 l
410.5589 58.508205 l
417.76361 54.34856 l
h
f
435.04657 58.595032 m
435.34732 58.074066 l
427.97769 53.819199 l
427.67691 54.340168 l
435.04657 58.595032 l
h
f
423.02832 36.736893 m
422.42676 36.736893 l
422.42676 45.970192 l
423.02832 45.970192 l
423.02832 36.736893 l
h
f
1 0 0 -1 369.23901 83.543633 cm
0 7.1728516 m
(&)s
CM
377.78601 76.735008 m
378.08679 77.255981 l
380.39166 75.925262 l
380.09088 75.404289 l
377.78601 76.735008 l
h
f
1 0 0 -1 375.12125 14.172628 cm
0 7.7001953 m
('\(\)*+12,/0-)[ 8.330078 2.778320 5.000000 2.778320 2.778320 5.561523 5.561523 5.561523 2.778320 5.561523 0.000000 ] xS
1 0 0 -1 308.93951 75.782204 cm
0 7.7001953 m
(345)[ 7.221680 2.778320 0.000000 ] xS
1 0 0 -1 129.58908 69.877663 cm
/F2.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(!")[ 6.108398 0.000000 ] xS
ep
end
%%Trailer
%%EOF
