%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.7 (Build 19H2) Quartz PS Context)
%%Title: ebs-synthesis2.eps
%%Creator: ChemDraw(tm) 19.0.0.26
%%CreationDate: 2020-10-23 02:06:37 +0000
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 373 216
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: © 1985–2019 PerkinElmer Informatics, Inc.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 373 216
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: NORRCD+NimbusSanL-Regu
%!FontType1-1.0: NORRCD+NimbusSanL-Regu 1.0000.0.0000
14 dict begin
/FontName /NORRCD+NimbusSanL-Regu def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /S put
dup 34 /e put
dup 35 /C put
dup 36 /O put
dup 37 /two put
dup 38 /H put
dup 39 /l put
dup 40 /a put
dup 41 /N put
dup 42 /b put
dup 43 /c put
dup 44 /d put
dup 45 /T put
dup 46 /M put
dup 47 /P put
dup 48 /one put
dup 49 /three put
dup 50 /four put
dup 51 /five put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<


44591B21212045B0C05058B0C0441B2159592DB800312C2020456944B001602020457D691844B001602DB800322CB800312A2DB800332C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800342C4B535845441B2121592DB800352C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800362C2020456944B001602DB800372CB800362A212DB800382C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800392C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8003A2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8003B2C2020456944B001602020457D691844B001602DB8003C2CB8003B2A2DB8003D2C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8003E2C4B535845441B2121592DB8003F2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800402C2020456944B001602DB800412CB800402A212DB800422C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800432C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800442C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800452C2020456944B001602020457D691844B001602DB800462CB800452A2DB800472C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800482C4B535845441B2121592DB800492C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8004A2C2020456944B001602DB8004B2CB8004A2A212DB8004C2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8004D2C2046B00425465258238A59204620
6A6164B0042546206A61645258238A592FFD2DB8004E2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8004F2C2020456944B001602020457D691844B001602DB800502CB8004F2A2DB800512C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800522C4B535845441B2121592DB800532C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800542C2020456944B001602DB800552CB800542A212DB800562C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800572C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800582C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800592C2020456944B001602020457D691844B001602DB8005A2CB800592A2DB8005B2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8005C2C4B535845441B2121592DB8005D2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8005E2C2020456944B001602DB8005F2CB8005E2A212DB800602C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800612C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800622C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800632C2020456944B001602020457D691844B001602DB800642CB800632A2DB800652C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800662C4B535845441B2121592D00020042000004D005BD000300070043B800532BB800082FB800042FB8000810B80000D0B800002FB8000410B80003DCB8000010B80007DCB8000310B80009DC00BA000700000056


05E5000F001B001C008A402C8705C700C701C302C808C90A064308153A0F031B3A07091C021C1C0B1231031A1E18310B191D1ED8216A66182B2B4EF44DED4E10F64DED12392F003F3FED3FED313043794032001A0D26012509250526160E18320014001232011A081832001006123201170C1532011302153201190A1B320011041B32002B2B2B2B012B2B2B2B2B2B2B2B81005D0017161110070221202726111037122100123510002322001114122103049BBB92A7C4FE95FEADC2AD94BE0174011BEBFEF1EBE4FEE0F701150E05E5FAC3FED0FEB7DAFF00E0D8014A012AD40110FAA20179F50103013CFEC7FECFF4FEB1055E000200AF000004F805BD000A001400614035690C6912790C7A12044814581468147A140407081E1110100A010E0F1E0100020A080206120C0409141431041A160F092500191516B8010BB3219589182B2B4EF44DFD3C4E10F64DFD11121739003F3F3CFD3C1012392F3CFD3C015D31305D132132161514062321112300272623211121323635AF0295C4F0D6DEFE32C70380784273FE74018C86A705BDDDC8ACFFFD9304B93A1FFE0372900000020060FFD504F605E5002F003000FE405E290F27232626360E3521472662267A0E7724096B08180E172502590E680EAA22030A0E3A2224220A03041C1886142F2F2B1C3A1403043A2B0930020A0E081124221F28303011182517490825281A321F25114900252F193132A0216A89182B2B4EF44DEDF4ED4E10F64DEDF4ED12392F1211393912113939003F3FED3FED12392F10ED111217392EFD335D7131304379404D282E111F0008022602262D2506251A26032C002B002D2E032C002B00052A082B011D131F2B001B15182B011918012D042B0009270B2B01250B012E042B000729042B001E121C2B0119161C2B01002B2B2B2B10102B2B01103C2B2B2B2B103C2B2B2B2B2B2B818181005D0116171633323736353427262F012627263534243332041523262726232206151417161F01161716151404232027263701011E073463FA705CB24B4CA2C7C3518C0112FBE70143BB0F315BDAB09A5A3BD0CE95518CFE9DEBFEEE9B9B03024D01DA7D4E92203EA0783332252D2C355CB7C6FEDFF5763F7394626C3220302F223B67C4F4D28C8BEE040B0000010021000004C905BD00070034401A01061E00070204080917171A00FB0203250504FB0619088C5E182B4E10F44DF43CFD3CF44E456544E6003F3F3C4DFD3C3130011521112311213504C9FE11CAFE1105BDAFFAF2050EAF00000000030052FFDC04470449000F003B003C00DD40382A30010A100B1B0C1C2733481069096A10073908120C09031B320724091D100C1D3B2B022E293BB73B023B322A2512100705081C2722171CB8018A4023171D1F07271D2E0B021D350B3C073C3C1C1407292AA8241A3E1B29

0C401408291A014B0BB603C701C603C71BD808D909D61FD823E817E8230BC711C712025C080521240F9A161D243906070716211D1C070A1D160B2507971CA71CB71CD71C0425160F251C05190A0C07110E270F1D27051A27242E072719192627D421A65D182B2B4EF44DFDE44E10F64DEDD4FD391239391112393912392F5D003F3FED3FED12392F3CFD3C10ED1112393130437940460023040503050205010504061F26111012101310141004060C25221B24260020001D26011E1D09170726000B150E26010D0E231A2126011E0521260108180A26000D100A2600002B2B2B2B01103C2B2B103C2B2B2B2A2B2A8101715D00715D5D00161716171615211E013332373637330E01070607062322001110003301262726232206070102B4D638361210FCEF0590978D543014B1074F3152794152C8FEEA0118E2011F0B284AAD7CA805012304476B55516C4AA2A3C55D36473B912E501C100123010601020142FE26754682B38A01DC000000000100890000013D05BD0003002940150000030A0517171A0102290003190405AA216242182B2B4EF43C4DFD3C4E456544E6003F3F31301333112389B4B405BDFA4300000001006F0000059806600030007EB8005D2BBB001101BD001F00612BBB000C01BC000D00612BBB000501BC000600612BBB000001BD000100612BB8000D10B80023D0B8000C10B80025D0B8000610B8002AD0B8000510B8002CD000B800242FB8002B2FB801B64558B800172F1BB9001701BE3E59B9001501B9F4B80019D0B800192FB8001AD0B8001A2F3031012334022711231126232207112311060215141216332115213533352E023534123637353315363332173533151E01120598C37C9471252F2D2371947C79E69D01D1FBDBDF6B934971D28D71321E1E36718FD37102D3D5011939FDD9023D0907FDC1022539FEE8D49EFF0095A09A0831BDEB77900115CE2AD1BA0404BAD12ACBFEE00000000100000000000067A8FFCC5F0F3CF500110800000000005F4D8F0000000000D8B9A29BF865FC270B9108F9000000090001000000000000000100000629FE2900000C01F865FCED0B9100010000000000000000000000000000001505120042047300C40473004004730031047300340473004205C7005A05C700A106AA009705C7009C06390050055600AF0556006004E3002104730052047300760400003B047300380473004801C7008905EE006F00000036005C00E8019401E202760306033E03CA0420049E04F405C005EE06B8072207A4081008DA08FC0984000100000015006F0009006B00070002001000100067000007E80B9000040001B8005D2B01BA000501B9005F2B01BF01BB003E00340029001D0012000000652BBF01BC004200340029001D0012000000652BBF01BD003A00340029001D0012000000652B

6144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A620456944750000
00>] def
/CharStrings 21 dict dup begin
/.notdef 0 def
/one 1 def
/two 2 def
/three 3 def
/four 4 def
/five 5 def
/C 6 def
/H 7 def
/M 8 def
/N 9 def
/O 10 def
/P 11 def
/S 12 def
/T 13 def
/a 14 def
/b 15 def
/c 16 def
/d 17 def
/e 18 def
/l 19 def
/uni20BE 20 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1947 -985 2961 2297} readonly def
/UniqueID 4065484 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E3232AAAE39DD432AA1E5356738508FDA4147F2F61700BB68D9A136460A1E8B847751427BC01DA4A6633A4A685913A5F9951027B3EB2F48A735558ABB593950F3B80BA6CC31862CB859E65A12D292E43BADE31F4FD19BE881FF9F767EA8FA1865584AC6F567E5439F5AE71A68039EDDB28E65D2455BE9C00F5EBB890BC89346950BAE9988EC55B952DC22C7500F5780C2F1AB2E31627FA3F834B5CD4BE1B49E6EF573F01A7598180AF62C3FC6252D5E6322AD7FC2E82535814B2EF9FF799E903508225B5B5ED7D1F054E02DDB090544FE458758BD9D66A599ED0CDFD14B880F3C13DE99EB73274C6B399411DF1E8A4435D6DBCA42DA73BE74D9FA36F755D99C6D80FAB80906371B6EBF64063AD655F54ED8D4189180A5EF452D6682B0BBB4AA76B9A9EE054392565F3B11F48F4C84E2C3BBC4F574E01E9FDA157CDCC843DD0242634D15B1FDA63090862B0B06B5C3C65F9C87502135FFF018B97F8941BE107228E93F149F95FB0DD1FFAB93088D2582F59C20C17C67B2426A17E1EB925CA22DAA2EFDA28E036BDD211A5B5D6BB6231A384072F7A12FE7AD2672D823BB22C4CA5E0E31E4049E4AA13C8F4BC097E19AB01C7E6455B28B71EA4B28755743DF1C9E410A4C27CA7E08143156521F5AFBF0B909A73F07FF0A38AD149EC81DA39DF7821580FEA72FC34ECBEBE63A4B0ABE4437181BB002AABE073F2F3563C34C7ACFF8F4DAC6D9C5D4491EF70B06220038500EAA0CC9A33B127C1720DCE11C64E77A42C63101D


71E75B34402ED4E912C58215CC9E75D5D25368A838E9B6461A41403E1AF294D5EC2C110A76878D0B905E4803B26A744094D297B832DBA8EA1BE858FB8200BA0705182E3E8557379C29F35D51CC4CCFFF9720334B03D065AAFF67BA19C747AB9A81D1F2F00A8868957BF6FFEBB0380CCCC2F2F89BF833A4B1DD0CB1F43C54C7BE897A695CED7AF1CB9D39E90F61E4624643D443C2EF073C096E843431FDCF6A7C1135246268F0925EC19C405B521A1141E5FA77FC0AD652F0E4B56DDC972D658B9B158F97CAC42A754010A64B54C03D5CC71E01348C97B7EAF1A6C6C19C9B00772A84E9FA75A65CB02852D4703F8581C180B6F576C564AFA1F32CEE46D68CA5F876352F473003138516305F40704BC2157915E8A31B6E3026726F959EB9499A6A997C80ABDBE892F0ED211E100DF7B27F32F79FDAA404A1E354238108F4F59383A79E4E9A157B77BD475AD0A2177DE70DC53F7E8C190506F2B98977E4AFFA3076F8429C6627602976212E901A9D9EEF2F59001C893A51F9B265AC2D513065A83B68BCDFA4D2A16169CFE00F02BB3D388709A777F98FDEB71B71767107B651F3DF68068AE7CA31FA588E090F1B9E56311D5F7A59BC209742DB0B574D9BCE00C2870812893749F62B36DDCF72595FAD3637BE9FB317B826376D281AE1AE90F3DA84835605EAFC8217BDACA14C6693F1753AF436B13F19F92D23FEB4ACDBB779ABADEB6D7192B8F7C05DD2BDD2DAAB23689AF08A239DFBE260960B3D251D8B339B063C2672605D255B50591904A87DB8810265DBF0653E0BC8FECF6F896AF6A932C5B0E208E8919411E48AE5B7525D53E881F3026228E39BE4B2953B0E94B8C69C144722574A6AA412B981F4099812B315BD5224DDE7402D071D20FA9BB5CAB3DD7770F4DC833BBFE9EBA1F0B10FF65A69A1FBE5FF86DBF88DAE98872B86088DFACF064ECCB56FC4951EC8F9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/NORRCD+NimbusSanL-Regu cguidfix
/F1.1/NORRCD+NimbusSanL-Regu renmfont
%%EndPageSetup
0.60000002 i
0.00014187396 0.00017728657 0 0 setcmykcolor
q
0 0 373 216 rc
-0.050000001 216 m
373.04999 216 l
373.04999 -0.050000001 l
-0.050000001 -0.050000001 l
h
f
0.73725492 0.70588237 0.64313728 0.87058824 setcmykcolor
2.8342068 174.75014 m
2.2326443 174.40283 l
2.2326443 189.14857 l
2.8342068 188.80127 l
2.8342068 174.75014 l
h
f
5.4259253 176.07281 m
4.8243628 176.07281 l
4.8243628 187.47859 l
5.4259253 187.47859 l
5.4259253 176.07281 l
h
f
15.002838 167.72458 m
15.002838 167.02995 l
2.2326443 174.40283 l
2.8342068 174.75014 l
15.002838 167.72458 l
h
f
27.171469 174.75014 m
27.47225 174.57649 l
27.47225 174.22917 l
15.002838 167.02995 l
15.002838 167.72458 l
27.171469 174.75014 l
h
f
24.730141 176.3333 m
25.030922 175.81233 l
15.153229 170.10944 l
14.852448 170.63042 l
24.730141 176.3333 l
h
f
27.171469 188.80127 m
27.47225 188.97493 l
27.773031 188.80127 l
27.773031 174.75014 l
27.47225 174.57649 l
27.171469 174.75014 l
27.171469 188.80127 l
h
f
15.002838 195.82683 m
15.002838 196.52145 l
27.47225 189.32224 l
27.47225 188.97493 l
27.171469 188.80127 l
15.002838 195.82683 l
h
f
14.852448 192.92101 m
15.153229 193.44197 l
25.030922 187.73907 l
24.730141 187.21811 l
14.852448 192.92101 l
h
f
2.8342068 188.80127 m
2.2326443 189.14857 l
15.002838 196.52145 l
15.002838 195.82683 l
2.8342068 188.80127 l
h
f
1 0 0 -1 36.606701 199.88322 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(!")[ 6.669922 0.000000 ] xS
CM
35.297794 193.84032 m
35.598576 193.31935 l
27.773031 188.80127 l
27.47225 188.97493 l
27.47225 189.32224 l
35.297794 193.84032 l
h
f
1 0 0 -1 36.330822 171.08635 cm
0 7.3681641 m
(#$)[ 7.221680 0.000000 ] xS
0.74512893 0.71195978 0.6486519 0.80928433 setcmykcolor
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
(%)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(&)s
0.73725492 0.70588237 0.64313728 0.87058824 setcmykcolor
CM
35.724087 170.15961 m
35.423306 169.63863 l
27.47225 174.22917 l
27.47225 174.57649 l
27.773031 174.75014 l
35.724087 170.15961 l
h
f
60.414318 196.47493 m
60.414318 195.87337 l
49.977016 195.87337 l
49.977016 196.47493 l
60.414318 196.47493 l
h
f
12 w
1 J
0.050000001 0 0 -0.050000001 -14 218 cm
1333.0605 255.02412 m
1397.9017 372.00076 1395.4113 514.68402 1326.5271 629.32648 c
S
1 0 0 -1 56.499207 192.93022 cm
/F1.1[ 7.5 0 0 -7.5 0 0]sf
0 8.0749512 m
(%)s
CM
127.92931 177.30788 m
127.32775 176.96057 l
127.32775 191.70631 l
127.92931 191.35901 l
127.92931 177.30788 l
127.92931 177.30788 l
h
f
130.52103 178.63055 m
129.91946 178.63055 l
129.91946 190.03633 l
130.52103 190.03633 l
130.52103 178.63055 l
130.52103 178.63055 l
h
f
140.09795 170.28232 m
140.09795 169.58769 l
127.32775 176.96057 l
127.92931 177.30788 l
140.09795 170.28232 l
140.09795 170.28232 l
h
f
152.26657 177.30788 m
152.56735 177.13423 l
152.56735 176.78691 l
140.09795 169.58769 l
140.09795 170.28232 l
152.26657 177.30788 l
152.26657 177.30788 l
h
f
149.82524 178.89104 m
150.12602 178.37007 l
140.24834 172.66718 l
139.94756 173.18816 l
149.82524 178.89104 l
149.82524 178.89104 l
h
f
152.26657 191.35901 m
152.56735 191.53267 l
152.86813 191.35901 l
152.86813 177.30788 l
152.56735 177.13423 l
152.26657 177.30788 l
152.26657 191.35901 l
152.26657 191.35901 l
h
f
140.09795 198.38457 m
140.09795 199.07919 l
152.56735 191.87997 l
152.56735 191.53267 l
152.26657 191.35901 l
140.09795 198.38457 l
140.09795 198.38457 l
h
f
139.94756 195.47874 m
140.24834 195.99971 l
150.12602 190.29681 l
149.82524 189.77585 l
139.94756 195.47874 l
139.94756 195.47874 l
h
f
127.92931 191.35901 m
127.32775 191.70631 l
140.09795 199.07919 l
140.09795 198.38457 l
127.92931 191.35901 l
127.92931 191.35901 l
h
f
1 0 0 -1 161.70181 202.44096 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(!"#')[ 6.669922 5.561523 7.221680 0.000000 ] xS
CM
160.3929 196.39806 m
160.69368 195.87709 l
152.86813 191.35901 l
152.56735 191.53267 l
152.56735 191.87997 l
160.3929 196.39806 l
160.3929 196.39806 l
h
f
1 0 0 -1 161.42593 173.64409 cm
0 7.3681641 m
(#$#')[ 7.221680 7.778320 7.221680 0.000000 ] xS
CM
160.81918 172.71735 m
160.5184 172.19637 l
152.56735 176.78691 l
152.56735 177.13423 l
152.86813 177.30788 l
160.81918 172.71735 l
160.81918 172.71735 l
h
f
107.01408 183.92847 m
77.081459 183.92847 l
77.081459 184.52846 l
107.01408 184.52846 l
h
f
112.22775 184.22847 m
112.22775 184.22847 106.21212 182.67456 106.21212 182.67456 c
106.21212 182.67456 106.96407 183.54863 106.96407 184.22847 c
106.96407 184.93018 106.21212 185.83237 106.21212 185.83237 c
106.21212 185.83237 112.22775 184.22847 112.22775 184.22847 c
112.22775 184.22847 112.22775 184.22847 112.22775 184.22847 c
h
f
1 0 0 -1 91.781067 197.12944 cm
0 7.7001953 m
(\()s
CM
250.80151 177.50963 m
250.19995 177.16231 l
250.19995 191.90807 l
250.80151 191.56075 l
250.80151 177.50963 l
h
f
253.39323 178.83229 m
252.79167 178.83229 l
252.79167 190.23808 l
253.39323 190.23808 l
253.39323 178.83229 l
h
f
262.97015 170.48405 m
262.97015 169.78944 l
250.19995 177.16231 l
250.80151 177.50963 l
262.97015 170.48405 l
h
f
275.13876 177.50963 m
275.43954 177.33597 l
275.47397 177.00853 l
262.97015 169.78944 l
262.97015 170.48405 l
275.13876 177.50963 l
h
f
272.69745 179.09279 m
272.99823 178.57181 l
263.12054 172.86893 l
262.81976 173.38989 l
272.69745 179.09279 l
h
f
275.13876 191.56075 m
275.43954 191.73441 l
275.74033 191.51587 l
275.74033 177.5545 l
275.43954 177.33597 l
275.13876 177.50963 l
275.13876 191.56075 l
h
f
262.97015 198.58632 m
262.97015 199.28093 l
275.47397 192.06184 l
275.43954 191.73441 l
275.13876 191.56075 l
262.97015 198.58632 l
h
f
262.81976 195.68048 m
263.12054 196.20145 l
272.99823 190.49857 l
272.69745 189.97758 l
262.81976 195.68048 l
h
f
250.80151 191.56075 m
250.19995 191.90807 l
262.97015 199.28093 l
262.97015 198.58632 l
250.80151 191.56075 l
h
f
1 0 0 -1 293.98563 188.14661 cm
0 7.1728516 m
(\))s
1 0 0 -1 285.79831 199.89285 cm
0 7.3681641 m
(!")[ 6.669922 0.000000 ] xS
CM
289.0184 173.24019 m
289.24817 172.53302 l
275.47397 177.00853 l
275.43954 177.33597 l
275.74033 177.5545 l
289.0184 173.24019 l
h
f
293.71555 179.70529 m
294.20224 179.3517 l
289.24817 172.53302 l
289.0184 173.24019 l
293.71555 179.70529 l
h
f
293.29642 189.94197 m
293.78311 190.29556 l
294.18488 189.74258 l
293.69818 189.38899 l
293.29642 189.94197 l
h
f
275.74033 191.51587 m
275.43954 191.73441 l
275.47397 192.06184 l
284.3028 194.93051 l
284.48868 194.35838 l
275.74033 191.51587 l
h
f
1 0 0 -1 289.69348 162.90196 cm
0 7.3681641 m
($)s
CM
293.42413 164.8476 m
292.85199 164.66171 l
289.78873 174.08952 l
290.36084 174.27541 l
293.42413 164.8476 l
h
f
290.95926 164.04672 m
290.38715 163.86082 l
287.32385 173.28864 l
287.89597 173.47453 l
290.95926 164.04672 l
h
f
311.82126 184.83597 m
311.9949 184.53519 l
311.82126 184.23441 l
302.04892 184.23441 l
302.04892 184.83597 l
311.82126 184.83597 l
h
f
319.3678 172.36656 m
319.02048 171.765 l
311.82126 184.23441 l
311.9949 184.53519 l
312.34222 184.53519 l
319.3678 172.36656 l
h
f
320.95096 174.80788 m
320.42996 174.5071 l
314.72708 184.3848 l
315.24805 184.68558 l
320.95096 174.80788 l
h
f
333.41891 172.36656 m
333.76624 171.765 l
319.02048 171.765 l
319.3678 172.36656 l
333.41891 172.36656 l
h
f
340.44449 184.53519 m
340.79178 184.53519 l
340.96545 184.23441 l
333.76624 171.765 l
333.41891 172.36656 l
340.44449 184.53519 l
h
f
337.53864 184.68558 m
338.0596 184.3848 l
332.35672 174.5071 l
331.83575 174.80788 l
337.53864 184.68558 l
h
f
333.41891 196.70381 m
333.59256 197.00459 l
333.93988 197.00459 l
340.96545 184.83597 l
340.79178 184.53519 l
340.44449 184.53519 l
333.41891 196.70381 l
h
f
319.3678 196.70381 m
319.02048 197.30537 l
333.41891 197.30537 l
333.59256 197.00459 l
333.41891 196.70381 l
319.3678 196.70381 l
h
f
320.69046 194.11211 m
320.69046 194.71367 l
332.09625 194.71367 l
332.09625 194.11211 l
320.69046 194.11211 l
h
f
312.34222 184.53519 m
311.9949 184.53519 l
311.82126 184.83597 l
319.02048 197.30537 l
319.3678 196.70381 l
312.34222 184.53519 l
h
f
1 0 0 -1 351.57938 188.14661 cm
0 7.1728516 m
(\)&)[ 7.221680 0.000000 ] xS
0.74512893 0.71195978 0.6486519 0.80928433 setcmykcolor
/F1.1[ 7.5 0 0 -7.5 0 0]sf
14.443359 9.4726562 m
(%)s
0.73725492 0.70588237 0.64313728 0.87058824 setcmykcolor
CM
350.68954 184.83597 m
350.68954 184.23441 l
340.96545 184.23441 l
340.79178 184.53519 l
340.96545 184.83597 l
350.68954 184.83597 l
h
f
1 0 0 -1 337.18094 213.18309 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(\)$)[ 7.221680 0.000000 ] xS
0.74512893 0.71195978 0.6486519 0.80928433 setcmykcolor
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
(%)s
0.73725492 0.70588237 0.64313728 0.87058824 setcmykcolor
CM
337.41837 204.23262 m
337.93933 203.93184 l
333.93988 197.00459 l
333.59256 197.00459 l
333.41891 197.30537 l
337.41837 204.23262 l
h
f
229.88628 183.92847 m
200.29546 183.92847 l
200.29546 184.52846 l
229.88628 184.52846 l
h
f
235.09995 184.22847 m
235.09995 184.22847 229.08432 182.67456 229.08432 182.67456 c
229.08432 182.67456 229.83627 183.54863 229.83627 184.22847 c
229.83627 184.93018 229.08432 185.83237 229.08432 185.83237 c
229.08432 185.83237 235.09995 184.22847 235.09995 184.22847 c
235.09995 184.22847 235.09995 184.22847 235.09995 184.22847 c
h
f
1 0 0 -1 214.81929 197.11967 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(*)s
CM
301.60785 99.616959 m
301.60785 124.74472 l
302.20782 124.74472 l
302.20782 99.616959 l
h
f
301.90784 94.40329 m
301.90784 94.40329 300.30392 100.41891 300.30392 100.41891 c
300.30392 100.41891 301.20612 99.666962 301.90784 99.666962 c
302.58768 99.666962 303.46173 100.41891 303.46173 100.41891 c
303.46173 100.41891 301.90784 94.40329 301.90784 94.40329 c
301.90784 94.40329 301.90784 94.40329 301.90784 94.40329 c
h
f
215.67545 46.469742 m
215.07388 46.122429 l
215.07388 60.819744 l
215.67545 60.472431 l
215.67545 46.469742 l
h
f
218.25844 47.787384 m
217.65688 47.787384 l
217.65688 59.154789 l
218.25844 59.154789 l
218.25844 47.787384 l
h
f
227.80214 39.468399 m
227.80214 38.773773 l
215.07388 46.122429 l
215.67545 46.469742 l
227.80214 39.468399 l
h
f
239.92882 46.469742 m
240.2296 46.296085 l
240.26401 45.968643 l
227.80214 38.773773 l
227.80214 39.468399 l
239.92882 46.469742 l
h
f
237.4962 48.047867 m
237.79698 47.526897 l
227.95253 41.843193 l
227.65175 42.364162 l
237.4962 48.047867 l
h
f
239.92882 60.472431 m
240.2296 60.646088 l
240.53038 60.427555 l
240.53038 46.514618 l
240.2296 46.296085 l
239.92882 46.469742 l
239.92882 60.472431 l
h
f
227.80214 67.473778 m
227.80214 68.168396 l
240.26401 60.97353 l
240.2296 60.646088 l
239.92882 60.472431 l
227.80214 67.473778 l
h
f
227.65175 64.578011 m
227.95253 65.098984 l
237.79698 59.415276 l
237.4962 58.894306 l
227.65175 64.578011 l
h
f
215.67545 60.472431 m
215.07388 60.819744 l
227.80214 68.168396 l
227.80214 67.473778 l
215.67545 60.472431 l
h
f
1 0 0 -1 258.70114 57.082527 cm
0 7.1728516 m
(\))s
1 0 0 -1 250.5423 68.789574 cm
0 7.3681641 m
(!")[ 6.669922 0.000000 ] xS
CM
253.76236 42.21529 m
253.99214 41.50811 l
240.26401 45.968643 l
240.2296 46.296085 l
240.53038 46.514618 l
253.76236 42.21529 l
h
f
258.43106 48.641201 m
258.91772 48.287613 l
253.99214 41.50811 l
253.76236 42.21529 l
258.43106 48.641201 l
h
f
258.04041 58.838699 m
258.52707 59.192287 l
258.90036 58.678493 l
258.4137 58.324905 l
258.04041 58.838699 l
h
f
240.53038 60.427555 m
240.2296 60.646088 l
240.26401 60.97353 l
249.04677 63.827225 l
249.23265 63.255108 l
240.53038 60.427555 l
h
f
1 0 0 -1 254.42249 31.92312 cm
0 7.3681641 m
($)s
CM
258.14899 33.867413 m
257.57684 33.681522 l
254.52953 43.060253 l
255.10164 43.246143 l
258.14899 33.867413 l
h
f
255.6924 33.069221 m
255.12029 32.883331 l
252.07294 42.262062 l
252.64507 42.447952 l
255.6924 33.069221 l
h
f
276.48831 53.771885 m
276.66199 53.471104 l
276.48831 53.170322 l
266.7644 53.170322 l
266.7644 53.771885 l
276.48831 53.771885 l
h
f
284.01065 41.34441 m
283.66333 40.742851 l
276.48831 53.170322 l
276.66199 53.471104 l
277.00928 53.471104 l
284.01065 41.34441 l
h
f
285.58878 43.777023 m
285.06778 43.476242 l
279.38409 53.320709 l
279.90506 53.62149 l
285.58878 43.777023 l
h
f
298.01331 41.34441 m
298.36063 40.742847 l
283.66333 40.742851 l
284.01065 41.34441 l
298.01331 41.34441 l
h
f
305.01468 53.471104 m
305.36197 53.471104 l
305.53564 53.170322 l
298.36063 40.742847 l
298.01331 41.34441 l
305.01468 53.471104 l
h
f
302.1189 53.62149 m
302.63986 53.320709 l
296.95618 43.476238 l
296.43518 43.77702 l
302.1189 53.62149 l
h
f
298.01331 65.597778 m
298.18698 65.89856 l
298.5343 65.89856 l
305.53564 53.771885 l
305.36197 53.471104 l
305.01468 53.471104 l
298.01331 65.597778 l
h
f
284.01062 65.597778 m
283.66333 66.199341 l
298.01331 66.199341 l
298.18698 65.89856 l
298.01331 65.597778 l
284.01062 65.597778 l
h
f
285.32828 63.014778 m
285.32828 63.616341 l
296.69568 63.616341 l
296.69568 63.014778 l
285.32828 63.014778 l
h
f
277.00928 53.471104 m
276.66199 53.471104 l
276.48831 53.771885 l
283.66333 66.199341 l
284.01062 65.597778 l
277.00928 53.471104 l
h
f
1 0 0 -1 316.10114 57.082527 cm
0 7.1728516 m
(\)&)[ 7.221680 0.000000 ] xS
CM
315.2113 53.771885 m
315.2113 53.170322 l
305.53564 53.170322 l
305.36197 53.471104 l
305.53564 53.771885 l
315.2113 53.771885 l
h
f
1 0 0 -1 301.75113 82.035103 cm
0 7.3681641 m
(\)$)[ 7.221680 0.000000 ] xS
0.74512893 0.71195978 0.6486519 0.80928433 setcmykcolor
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
(%)s
0.73725492 0.70588237 0.64313728 0.87058824 setcmykcolor
CM
301.98856 73.084625 m
302.50952 72.783844 l
298.5343 65.89856 l
298.18698 65.89856 l
298.01331 66.199341 l
301.98856 73.084625 l
h
f
327.06064 41.344418 m
326.71332 40.742855 l
322.50806 48.026569 l
323.02902 48.327351 l
327.06064 41.344418 l
h
f
341.06332 41.344418 m
341.23697 41.043636 l
341.06332 40.742855 l
326.71332 40.742855 l
327.06064 41.344418 l
341.06332 41.344418 l
h
f
1 0 0 -1 315.82281 32.325256 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
($)s
CM
323.80743 32.525146 m
323.28647 32.825928 l
328.1178 41.194027 l
328.63876 40.893246 l
323.80743 32.525146 l
h
f
321.5705 33.816647 m
321.04953 34.117428 l
325.88083 42.485527 l
326.40182 42.184746 l
321.5705 33.816647 l
h
f
1 0 0 -1 344.80115 57.082527 cm
0 7.1728516 m
(\))s
CM
348.58563 28.916954 m
348.23831 28.315392 l
341.06332 40.742855 l
341.23697 41.043636 l
341.58429 41.043636 l
348.58563 28.916954 l
h
f
350.16376 31.349564 m
349.64279 31.048782 l
343.95908 40.893246 l
344.48004 41.194027 l
350.16376 31.349564 l
h
f
362.58832 28.916954 m
362.93564 28.315392 l
348.23831 28.315392 l
348.58563 28.916954 l
362.58832 28.916954 l
h
f
369.58966 41.043636 m
370.2843 41.043636 l
362.93564 28.315392 l
362.58832 28.916954 l
369.58966 41.043636 l
h
f
366.69391 41.194027 m
367.21487 40.893246 l
361.53116 31.048782 l
361.01019 31.349564 l
366.69391 41.194027 l
h
f
362.58832 53.170322 m
362.93564 53.771885 l
370.2843 41.043636 l
369.58966 41.043636 l
362.58832 53.170322 l
h
f
352.86441 53.170322 m
352.86441 53.771885 l
362.93564 53.771885 l
362.58832 53.170322 l
352.86441 53.170322 l
h
f
352.86441 50.587322 m
352.86441 51.188885 l
361.27069 51.188885 l
361.27069 50.587322 l
352.86441 50.587322 l
h
f
341.58429 41.043636 m
341.23697 41.043636 l
341.06332 41.344418 l
345.08286 48.306461 l
345.60382 48.00568 l
341.58429 41.043636 l
h
f
1 0 0 -1 307.26221 117.2992 cm
0 7.7001953 m
(+)s
CM
4.0579433 40.034187 m
3.4563808 39.686874 l
3.4563808 54.334187 l
4.0579433 53.986874 l
4.0579433 40.034187 l
h
f
6.6319432 41.34663 m
6.0303807 41.34663 l
6.0303807 52.674431 l
6.6319432 52.674431 l
6.6319432 41.34663 l
h
f
16.141325 33.057842 m
16.141325 32.363216 l
3.4563808 39.686874 l
4.0579433 40.034187 l
16.141325 33.057842 l
h
f
28.224707 40.034187 m
28.525488 39.860531 l
28.559904 39.533089 l
16.141325 32.363216 l
16.141325 33.057842 l
28.224707 40.034187 l
h
f
25.801098 41.607113 m
26.101879 41.086147 l
16.291716 35.422245 l
15.990934 35.943214 l
25.801098 41.607113 l
h
f
28.224707 53.986874 m
28.525488 54.16053 l
28.826269 53.942001 l
28.826269 40.07906 l
28.525488 39.860531 l
28.224707 40.034187 l
28.224707 53.986874 l
h
f
16.141325 60.963219 m
16.141325 61.657841 l
28.559904 54.487972 l
28.525488 54.16053 l
28.224707 53.986874 l
16.141325 60.963219 l
h
f
15.990934 58.077847 m
16.291716 58.598816 l
26.101879 52.934914 l
25.801098 52.413948 l
15.990934 58.077847 l
h
f
4.0579433 53.986874 m
3.4563808 54.334187 l
16.141325 61.657841 l
16.141325 60.963219 l
4.0579433 53.986874 l
h
f
1 0 0 -1 46.920086 50.621956 cm
0 7.1728516 m
(\))s
1 0 0 -1 38.790634 62.288555 cm
0 7.3681641 m
(!")[ 6.669922 0.000000 ] xS
CM
42.010708 35.795177 m
42.240486 35.087997 l
28.559904 39.533089 l
28.525488 39.860531 l
28.826269 40.07906 l
42.010708 35.795177 l
h
f
46.650013 42.18063 m
47.136684 41.827042 l
42.240486 35.087997 l
42.010708 35.795177 l
46.650013 42.18063 l
h
f
46.288738 52.337681 m
46.775414 52.691269 l
47.119316 52.217926 l
46.632645 51.864334 l
46.288738 52.337681 l
h
f
28.826269 53.942001 m
28.525488 54.16053 l
28.559904 54.487972 l
37.295109 57.326214 l
37.481003 56.754093 l
28.826269 53.942001 l
h
f
1 0 0 -1 42.65538 25.550562 cm
0 7.3681641 m
($)s
CM
46.37759 27.493464 m
45.80547 27.307571 l
42.774597 36.635639 l
43.346718 36.821533 l
46.37759 27.493464 l
h
f
43.929569 26.698055 m
43.357452 26.512161 l
40.326576 35.840233 l
40.898697 36.026123 l
43.929569 26.698055 l
h
f
64.657272 47.31131 m
64.830925 47.010529 l
64.657272 46.709747 l
54.983368 46.709747 l
54.983368 47.31131 l
64.657272 47.31131 l
h
f
71.807266 59.695477 m
72.154579 59.093914 l
65.178238 47.010529 l
64.830925 47.010529 l
64.657272 47.31131 l
71.807266 59.695477 l
h
f
73.206543 56.971085 m
73.727509 56.670303 l
68.063606 46.860138 l
67.542641 47.160919 l
73.206543 56.971085 l
h
f
86.147011 59.695477 m
86.28093 59.394695 l
86.107269 59.093914 l
72.154579 59.093914 l
71.807266 59.695477 l
86.147011 59.695477 l
h
f
93.582146 47.350174 m
93.430923 47.010529 l
93.083611 47.010529 l
86.107269 59.093914 l
86.28093 59.394695 l
86.650673 59.355831 l
93.582146 47.350174 l
h
f
90.719208 47.160919 m
90.198242 46.860138 l
84.53434 56.670303 l
85.055313 56.971085 l
90.719208 47.160919 l
h
f
86.454582 34.325584 m
86.107269 34.927147 l
93.083611 47.010529 l
93.430923 47.010529 l
93.624451 46.744164 l
86.454582 34.325584 l
h
f
71.807266 34.325584 m
72.154579 34.927147 l
86.107269 34.927147 l
86.454582 34.325584 l
71.807266 34.325584 l
h
f
73.467026 36.899586 m
73.467026 37.501148 l
84.794823 37.501148 l
84.794823 36.899586 l
73.467026 36.899586 l
h
f
64.657272 46.709747 m
64.830925 47.010529 l
65.178238 47.010529 l
72.154579 34.927147 l
71.807266 34.325584 l
64.657272 46.709747 l
h
f
1 0 0 -1 103.80759 53.595093 cm
0 7.1728516 m
(\))s
CM
102.50436 49.246647 m
102.62943 48.65823 l
93.624451 46.744164 l
93.430923 47.010529 l
93.582146 47.350174 l
102.50436 49.246647 l
h
f
108.59122 64.01944 m
108.91319 64.20533 l
109.1963 64.021477 l
108.26301 55.141708 l
107.66474 55.20459 l
108.59122 64.01944 l
h
f
105.85868 62.64595 m
106.45695 62.583073 l
105.70311 55.410767 l
105.10484 55.473648 l
105.85868 62.64595 l
h
f
120.99657 71.528984 m
121.29736 71.355331 l
121.29736 71.008018 l
109.1963 64.021477 l
108.91319 64.20533 l
108.89552 64.542442 l
120.99657 71.528984 l
h
f
1 0 0 -1 92.238655 82.001419 cm
0 7.1728516 m
(&)s
0 15.541179 m
(\))s
CM
100.7522 67.509598 m
100.99687 68.059151 l
108.89552 64.542442 l
108.91319 64.20533 l
108.59122 64.01944 l
100.7522 67.509598 l
h
f
1 0 0 -1 117.68652 89.266754 cm
0 7.1728516 m
(\))s
CM
120.99657 80.490196 m
121.59814 80.490196 l
121.59814 71.528984 l
121.29736 71.355331 l
120.99657 71.528984 l
120.99657 80.490196 l
h
f
123.57057 80.490196 m
124.17213 80.490196 l
124.17213 72.841431 l
123.57057 72.841431 l
123.57057 80.490196 l
h
f
133.68152 93.152641 m
133.68152 92.458015 l
126.54752 88.339203 l
126.24673 88.860168 l
133.68152 93.152641 l
h
f
146.36647 85.828987 m
145.76491 85.481674 l
133.68152 92.458015 l
133.68152 93.152641 l
146.36647 85.828987 l
h
f
143.64207 84.429718 m
143.34129 83.908745 l
133.53113 89.572647 l
133.83191 90.093613 l
143.64207 84.429718 l
h
f
146.36647 71.181671 m
145.76491 71.528984 l
145.76491 85.481674 l
146.36647 85.828987 l
146.36647 71.181671 l
h
f
133.68152 63.858017 m
133.68152 64.552643 l
145.76491 71.528984 l
146.36647 71.181671 l
133.68152 63.858017 l
h
f
133.83191 66.917046 m
133.53113 67.438011 l
143.34129 73.101913 l
143.64207 72.580948 l
133.83191 66.917046 l
h
f
121.29736 71.008018 m
121.29736 71.355331 l
121.59814 71.528984 l
133.68152 64.552643 l
133.68152 63.858017 l
121.29736 71.008018 l
h
f
86.650673 59.355831 m
86.28093 59.394695 l
86.147011 59.695477 l
91.470978 65.608337 l
91.918022 65.205811 l
86.650673 59.355831 l
h
f
1 0 0 -1 177.86493 75.802834 cm
0 7.7001953 m
(,)s
0 J
[
50
50
] 0 d
0.050000001 0 0 -0.050000001 -14 218 cm
3620.3098 3159.0784 m
4221.0283 3159.0784 l
S
CM
161.80182 60.046082 m
161.80182 60.046082 167.81744 61.649986 167.81744 61.649986 c
167.81744 61.649986 167.06549 60.747791 167.06549 60.046082 c
167.06549 59.366249 167.81744 58.492176 167.81744 58.492176 c
167.81744 58.492176 161.80182 60.046082 161.80182 60.046082 c
161.80182 60.046082 161.80182 60.046082 161.80182 60.046082 c
h
f
1 0 0 -1 14.110443 145.18654 cm
0 7.7001953 m
(-./0)[ 6.108398 8.330078 6.669922 0.000000 ] xS
1 0 0 -1 147.0773 145.18654 cm
0 7.7001953 m
(-./%)[ 6.108398 8.330078 6.669922 0.000000 ] xS
1 0 0 -1 296.10727 145.28175 cm
0 7.7001953 m
(-./1)[ 6.108398 8.330078 6.669922 0.000000 ] xS
1 0 0 -1 279.15176 10.550108 cm
0 7.7001953 m
(-./2)[ 6.108398 8.330078 6.669922 0.000000 ] xS
1 0 0 -1 59.622589 10.637999 cm
0 7.7001953 m
(-./3)[ 6.108398 8.330078 6.669922 0.000000 ] xS
ep
end
%%Trailer
%%EOF
